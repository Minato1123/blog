import{_ as e,o as a,c as s,V as l}from"./chunks/framework.62adf23d.js";const y=JSON.parse('{"title":"May. 2023","description":"","frontmatter":{},"headers":[],"relativePath":"daily-log/may2023.md"}'),o={name:"daily-log/may2023.md"},n=l(`<h1 id="may-2023" tabindex="-1">May. 2023 <a class="header-anchor" href="#may-2023" aria-label="Permalink to &quot;May. 2023&quot;">​</a></h1><h2 id="_1-st" tabindex="-1">1 st <a class="header-anchor" href="#_1-st" aria-label="Permalink to &quot;1 st&quot;">​</a></h2><h3 id="web-api" tabindex="-1">Web API <a class="header-anchor" href="#web-api" aria-label="Permalink to &quot;Web API&quot;">​</a></h3><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver" target="_blank" rel="noreferrer">MutationObserver</a><blockquote><p>追蹤 DOM 的變化，無論是子節點的變動或內容、屬性的變動，並且獲得相關的資訊，以便作出後續的行動。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> observer </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MutationObserver</span><span style="color:#A6ACCD;">(callback)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><b>指定「被觀察的對象」</b></p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">observer</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">observe</span><span style="color:#A6ACCD;">(target</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> options)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><code>target</code>：受到觀察的 DOM 節點。</li><li><code>options</code>：初始化設定物件，用來指定 DOM 節點的哪些項目需要被觀察等相關設定。 <br><br><a href="https://ithelp.ithome.com.tw/articles/10277536" target="_blank" rel="noreferrer">⋯ Reference</a></li></ul></blockquote></li></ul><h2 id="_2-nd" tabindex="-1">2 nd <a class="header-anchor" href="#_2-nd" aria-label="Permalink to &quot;2 nd&quot;">​</a></h2><h3 id="元件庫" tabindex="-1">元件庫 <a class="header-anchor" href="#元件庫" aria-label="Permalink to &quot;元件庫&quot;">​</a></h3><ul><li><a href="https://headlessui.com/" target="_blank" rel="noreferrer">HeadlessUI</a><blockquote><p>完全未樣式化、完全可存取的 UI 元件，旨在與 Tailwind CSS 完美整合。</p></blockquote></li><li><a href="https://zagjs.com/" target="_blank" rel="noreferrer">Zag</a><blockquote><p>由有限狀態機所支援、不依賴於特定框架的 UI 元件。</p></blockquote></li><li><a href="https://www.inkline.io/" target="_blank" rel="noreferrer">inkline</a><blockquote><p>UI 元件庫，為構建高品質、可存取和可自定義的 Vue3 設計系統提供了開發者友好的基礎。<br> 旨在使用一致和表達性的 API 提供優秀的使用者界面（UI）、使用者體驗（UX）和開發者體驗（DX）。</p></blockquote></li></ul><h3 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://dreamsands.io/?ref=producthunt" target="_blank" rel="noreferrer">Dreamsands</a><blockquote><p>圖片轉程式碼平台，可以從任何圖片或截圖中生成程式碼，並在自己的專案中做使用。</p></blockquote></li></ul><h2 id="_3-rd" tabindex="-1">3 rd <a class="header-anchor" href="#_3-rd" aria-label="Permalink to &quot;3 rd&quot;">​</a></h2><h3 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li><p><code>@layer</code><br></p><blockquote><p>依照 layer 宣告的順序來<span class="span-heightlight">決定樣式的優先順序</span>，後宣告的即使權重較小也會覆寫。</p></blockquote><blockquote><p><b>使用方式</b></p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@layer</span><span style="color:#A6ACCD;"> layer_name </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* ... */</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">example.css</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> layer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">example</span><span style="color:#89DDFF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="warning custom-block"><p class="custom-block-title"><code>@layer</code> 也可以是巢狀結構。</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@layer</span><span style="color:#A6ACCD;"> layer_container </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">@layer</span><span style="color:#A6ACCD;"> layer_A </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* ... */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">@layer</span><span style="color:#A6ACCD;"> layer_B </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">/* ... */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></div><div class="danger custom-block"><p class="custom-block-title">注意</p><ol><li>在<b>沒有</b> <code>!important</code> 的情況下，non-layered style 比 layered style 優先。<br>（就算寫在 layered style 之前也一樣）</li><li>在<b>皆有</b> <code>!important</code> 的情況下，layered style 比 non-layered style 優先。</li><li>即使沒有宣告所有 Layer 的順序，沒被宣告的 Layer 依然存在，且順序如同 style 中的順序往後<b>排在宣告過的 layer 後面</b>。</li></ol></div><p><a href="https://blog.boggy.tw/2022/05/04/css-layer/" target="_blank" rel="noreferrer">⋯ Reference</a></p></blockquote></li><li><p><code>@container</code></p><blockquote><p>可以<span class="span-heightlight">根據父容器的大小來設定元素的樣式</span>。<br> 要使用 container query，需要在父容器上聲明一個 containment context，以便瀏覽器知道苦可能會查詢此容器的尺寸。<br><br> 為此，可以使用 <code>container-type</code> 屬性：</p><ol><li><code>size</code>：創建一個查詢容器，支援對 inline 和 block 的尺寸進行查詢。</li><li><code>inline-size</code>：創建一個查詢容器，支援對 inline 的尺寸進行查詢。</li><li><code>normal</code>：創建一個查詢容器，但只提供樣式查詢，不支援任何尺寸的查詢。 <br><br></li></ol><p>另外，也可以使用 <code>container-name</code> 屬性為 containment context 命名。<br> 該名稱可以在 <code>@container</code> 查詢中使用，以便針對特定容器進行定位。</p></blockquote><blockquote><p><b>縮寫版本</b></p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">class-name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  container</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> container-name / container-type</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a href="https://juejin.cn/post/7044181023696879652" target="_blank" rel="noreferrer">⋯ Reference</a></p></blockquote></li></ul><h2 id="_4-th" tabindex="-1">4 th <a class="header-anchor" href="#_4-th" aria-label="Permalink to &quot;4 th&quot;">​</a></h2><h3 id="套件" tabindex="-1">套件 <a class="header-anchor" href="#套件" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><p><a href="https://github.com/ardatan/feTS" target="_blank" rel="noreferrer">feTS</a></p><blockquote><p>使用 TypeScript 和 OpenAPI，以 end-to-end 的型別安全方式構建和使用 REST API 的新方法。<br></p></blockquote><blockquote><p><b>feTS Client</b><br> 具有完全型別安全性的 HTTP 客戶端，使用 OpenAPI 規範。<br> 可以自動從檔案中推斷型別，並提供一組具有型別安全性的 API，以與自己的 API 進行互動。</p></blockquote><blockquote><p><b>feTS Server</b><br> 創建具有完全型別安全性的 REST API 函式庫。<br> 若使用者是 JavaScript 環境，強烈建議使用 feTS Client 做配合。</p></blockquote></li></ul><h3 id="工具-1" tabindex="-1">工具 <a class="header-anchor" href="#工具-1" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://swagger.io/tools/swagger-ui/" target="_blank" rel="noreferrer">Swagger UI</a><blockquote><p>在沒有實現任何邏輯的情況下，對 API 的資源進行可視化和互動。<br> 根據 OpenAPI 規範自動生成，視覺化檔案使後端實現和客戶端使用都變得更輕鬆。</p></blockquote></li><li><a href="https://gradient.style/" target="_blank" rel="noreferrer">HD Gradients</a><blockquote><p>使用工具調整以產生漸變的 CSS 程式碼。</p></blockquote></li></ul><h2 id="_7-th" tabindex="-1">7 th <a class="header-anchor" href="#_7-th" aria-label="Permalink to &quot;7 th&quot;">​</a></h2><h3 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">​</a></h3><ul><li><p><a href="https://github.com/vuejs/rfcs" target="_blank" rel="noreferrer">Vue RFCs</a></p><blockquote><p>Request For Comments<br> RFCs 流程的目的是提供一致且受控的途徑，讓新功能進入框架。<br> 許多更動（包括錯誤修復和文件改進）皆可以透過正常的 GitHub pull request workflow 來實作和審查。<br> 然而，有些改變是重大的，這些改變需要經過設計過程，並在 Vue 核心團隊和社群中產生共識。</p></blockquote><blockquote><p><b>RFC 過程</b></p><ol><li>Pending：當 RFC 作為討論主題提交時。<br>我們使用 Discussions 而不是 Pull Requests，因為前者提供更好的討論程序。</li><li>Active：當 RFC 被確認並正在實作時，該功能可能會以實驗性的方式發佈。</li><li>Landed：當 RFC 的建議更改在發佈中作為穩定版本時。</li><li>Rejected：當 RFC 被正式拒絕或取消時。</li></ol></blockquote></li></ul><h3 id="vscode-extension" tabindex="-1">VSCode Extension <a class="header-anchor" href="#vscode-extension" aria-label="Permalink to &quot;VSCode Extension&quot;">​</a></h3><ul><li><a href="https://github.com/pushqrdx/vscode-inline-html" target="_blank" rel="noreferrer">vscode-inline-html</a><blockquote><p>ES6 Template Strings 中對 HTML / CSS 的 Syntax Highlight、Emmet、IntelliSense 支援。<br> 在 JavaScript 或 TypeScript 檔案中使用 <code>/*html*/</code>、<code>html</code>、<code>/*css*/</code>、<code>css</code>、<code>/*style*/</code>、<code>style</code> 以及反引號 <code>\`</code>，可以在 Template 中獲得完整的編輯器支援。</p></blockquote></li></ul><h3 id="工具-2" tabindex="-1">工具 <a class="header-anchor" href="#工具-2" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://github.com/emmetio/emmet" target="_blank" rel="noreferrer">Emmet</a><blockquote><p>用於提升 HTML 和 CSS 語言編寫效率的 Web 開發工具包。<br> 可以輸入類似於 CSS 選擇器的表示式（縮寫），然後將其轉換為 HTML 片段。</p></blockquote></li></ul><h2 id="_8-th" tabindex="-1">8 th <a class="header-anchor" href="#_8-th" aria-label="Permalink to &quot;8 th&quot;">​</a></h2><h3 id="vue-1" tabindex="-1">Vue <a class="header-anchor" href="#vue-1" aria-label="Permalink to &quot;Vue&quot;">​</a></h3><ul><li><a href="https://vuejs.org/guide/scaling-up/sfc.html" target="_blank" rel="noreferrer">SFC</a><blockquote><p>Vue Single-File Components<br> 也被稱為 <code>*.vue</code> 檔案，是一種特殊的檔案格式。<br> 可以將 Vue 組件的 <code>&lt;template&gt;</code>、<code>&lt;script&gt;</code> 和 <code>&lt;style&gt;</code> 封裝在一個單獨的檔案中。</p></blockquote></li></ul><h3 id="套件-1" tabindex="-1">套件 <a class="header-anchor" href="#套件-1" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><a href="https://github.com/HunYan-io/vite-plugin-vue-nested-sfc" target="_blank" rel="noreferrer">vite-plugin-vue-nested-sfc</a><blockquote><p>可以在 SFC 中嵌套 SFC。</p></blockquote></li><li><a href="https://github.com/cevr/ftld" target="_blank" rel="noreferrer">ftld</a><blockquote><p>針對 TypeScript 的小型函式庫，專注於提供一組 functional primitives 以協助建構堅固且具彈性的應用程式。<br> 使用 ftld 提供的函式和工具可以更有效且易維護的方式實現 functional programming 的概念和技術。</p></blockquote></li></ul><div class="tip custom-block"><p class="custom-block-title">tree-shakeable</p><p>與 JavaScript 優化和打包相關的術語。<br> 指的是能在打包過程中移除未使用的程式碼（dead-code），以減少最終應用程式的檔案大小。</p></div><h2 id="_9-th" tabindex="-1">9 th <a class="header-anchor" href="#_9-th" aria-label="Permalink to &quot;9 th&quot;">​</a></h2><h3 id="web-api-1" tabindex="-1">Web API <a class="header-anchor" href="#web-api-1" aria-label="Permalink to &quot;Web API&quot;">​</a></h3><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API" target="_blank" rel="noreferrer">View Transitions API</a><blockquote><p>⚠️ 實驗性功能（部分瀏覽器仍開發中）<br> 提供了一種機制可以輕鬆地在不同 DOM 狀態之間創建動畫轉換，同時一步更新 DOM 內容。</p></blockquote></li></ul><h3 id="工具-3" tabindex="-1">工具 <a class="header-anchor" href="#工具-3" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://github.com/webfansplz/vite-plugin-vue-devtools" target="_blank" rel="noreferrer">Vue DevTools</a><blockquote><p>目的在於增強 Vue 的開發者體驗的 Vite 套件。</p></blockquote></li><li><a href="https://affine.pro/" target="_blank" rel="noreferrer">AFFiNE.PRO</a><blockquote><p>將規劃、分類和創建結合在一起。<br> 隱私至上、開源、可客製化且隨時可用 —— Notion &amp; Miro 的免費替代品。</p></blockquote></li></ul><h3 id="套件-2" tabindex="-1">套件 <a class="header-anchor" href="#套件-2" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><a href="https://github.com/johnsoncodehk/vite-plugin-vue-component-preview" target="_blank" rel="noreferrer">vite-plugin-vue-component-preview</a><blockquote><p>此 Vite 套件支援在 SFC 中使用 <code>&lt;preview lang=&quot;md&quot;&gt;</code> 自定義區塊來 preview 單個 Vue 組件。</p></blockquote></li></ul><h2 id="_10-th" tabindex="-1">10 th <a class="header-anchor" href="#_10-th" aria-label="Permalink to &quot;10 th&quot;">​</a></h2><h3 id="mixed-content" tabindex="-1">Mixed Content <a class="header-anchor" href="#mixed-content" aria-label="Permalink to &quot;Mixed Content&quot;">​</a></h3><p>一個<span class="span-heightlight">含有 HTTP 明文內容的 HTTPS 頁面</span>。<br> 這種頁面只有部份加密，沒有加密的內容易於遭到竊聽和中間人攻擊，令網頁不安全。<br></p><p><b>被動 / 顯示型混合內容（mixed passive / display content）</b><br> 內容包在 HTTPS 頁面，但<span class="span-heightlight">無法改變其他部分的 HTTP 內容</span>。<br> 威脅程度較低（可能有錯誤內容、或者用戶的 cookie 遭到竊取）。</p><p><b>主動型混合內容（mixed active content）</b><br> 有權訪問文件 HTTPS 頁面、物件模型的內容。<br> 這種混合內容<span class="span-heightlight">可以改變 HTTPS 頁面行為、並暗自竊取用戶的敏感資訊</span>。<br> 因此，主動型混合內容除了內容除了上文所述的風險外，還容易受到其他攻擊媒介的威脅。<span class="span-mb"></span> 混合內容涉及的風險，取決於用戶訪問的網站類型、還有該網站資訊的敏感程度。<br> 網頁可能有公諸於世的公開資料、也可能有僅限授權者閱覽的私人資料。<br> 即使網頁是公開的，也沒有用戶的敏感資料，混合內容依舊給攻擊者把用戶重定向到其他 HTTP 頁面、並從這些網站竊取 HTTP cookie 的機會。</p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/Security/Mixed_content" target="_blank" rel="noreferrer">⋯ Reference</a></p><h3 id="sdk-軟體開發套件" tabindex="-1">SDK（軟體開發套件） <a class="header-anchor" href="#sdk-軟體開發套件" aria-label="Permalink to &quot;SDK（軟體開發套件）&quot;">​</a></h3><p>一組針對特定平台的開發人員所設計的工具集合。<br> 在建立特定平台、作業系統或程式設計語言上可執行的程式碼時，通常需要偵錯工具、編譯器和程式庫等元件。<br> SDK 的優點在於它將開發和執行軟體所需的所有元件都整合在一個地方，並且提供文件、教學和指南等資源，以及可以加速應用程式開發速度的 API 和架構。</p><p><a href="https://aws.amazon.com/tw/what-is/sdk/?trk=faq_card" target="_blank" rel="noreferrer">⋯ Reference</a></p><h2 id="_11-st" tabindex="-1">11 st <a class="header-anchor" href="#_11-st" aria-label="Permalink to &quot;11 st&quot;">​</a></h2><h3 id="js" tabindex="-1">JS <a class="header-anchor" href="#js" aria-label="Permalink to &quot;JS&quot;">​</a></h3><ul><li><code>use strict</code><blockquote><p>目的是為了讓編寫「具穩定性的 JavaScript 更容易」，在不穩定的語法或妨礙最佳化的語意都會跳出警告，讓開發者避開這些寫法。<br></p><ol><li>整支檔案使用：加在 JS 檔案最前面。<br></li><li>指定函式使用：加在函式的第一行（只有這個函式套用了嚴格模式）。<br></li></ol><p><a href="https://medium.com/itsems-frontend/javascript-strict-mode-d0a3aa74458b" target="_blank" rel="noreferrer">⋯ Reference</a></p></blockquote></li></ul><h3 id="css-1" tabindex="-1">CSS <a class="header-anchor" href="#css-1" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li>CSS Sprites <blockquote><p>一種網站圖片應用的方法，將很多小張的圖片合併到一張圖裡。<br> 透過這樣的方式就可以只送一次 HTTP request，並僅載入一張圖，降低網頁載入的時間。<br> 可以藉由 Sass / Scss 和 <a href="http://blog.shihshih.com/spriting-with-compass/" target="_blank" rel="noreferrer">Compass</a> 自動產生 CSS Sprites。</p></blockquote></li></ul><h2 id="_12-nd" tabindex="-1">12 nd <a class="header-anchor" href="#_12-nd" aria-label="Permalink to &quot;12 nd&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">關注點分離（Separation of Concerns）</p><p>一種軟體設計原則，旨在將一個複雜的系統分解為不同的模塊，每個模塊負責處理特定的關注點或功能。這個原則的目的是提高程式碼的可讀性、可維護性和重用性。</p></div><h3 id="套件-3" tabindex="-1">套件 <a class="header-anchor" href="#套件-3" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><a href="https://github.com/majodev/google-webfonts-helper" target="_blank" rel="noreferrer">google-webfonts-helper</a><blockquote><p>自行架設 Google 字型。<br> 獲取 eot、ttf、svg、woff 和 woff2 檔案 + CSS 程式碼片段。</p></blockquote></li><li><a href="https://tresjs.org/" target="_blank" rel="noreferrer">TresJS</a><blockquote><p>使用 Vue 組件進行聲明式的 ThreeJS。<br> 建立在 Vue 自定義渲染器的基礎上，並由 Vite 提供動力。</p></blockquote></li></ul><h3 id="無障礙網站" tabindex="-1">無障礙網站 <a class="header-anchor" href="#無障礙網站" aria-label="Permalink to &quot;無障礙網站&quot;">​</a></h3><p>WAI-ARIA 是一個由 W3C 編撰的規格，定義一套額外的 HTML 屬性能用於元素上提供額外的語意及改善可及性，當元素缺乏這些條件時可適用。</p><p>定義三個特點：</p><ul><li><p>Roles<br></p><blockquote><p>定義元素是「什麼」或是「做什麼事」。<br></p></blockquote><blockquote><p>大部分重複了 HTML5 結構化元素的語意值：<br>（e.g. <code>role=&quot;navigation&quot;</code> = <code>&lt;nav&gt;</code> 或 <code>role=&quot;complementary&quot;</code> = <code>&lt;aside&gt;</code>）<br> 但也有其他描述不同的頁面結構者：<br>（e.g. <code>role=&quot;banner&quot;</code>、<code>role=&quot;search&quot;</code>、<code>role=&quot;tabgroup&quot;</code>、<code>role=&quot;tab&quot;</code>）</p></blockquote></li><li><p>Properties<br></p><blockquote><p>這些用以定義元素的屬性，可用來賦予元素額外的意義或語意。<br></p></blockquote><blockquote><p><b>範例</b>：</p><ol><li><code>aria-required=&quot;true&quot;</code>：指定一個表單輸入必須填寫才有效。<br></li><li><code>aria-labelledby=&quot;label&quot;</code>：允許在元素上放置一個 ID，然後在頁面的其他地方引用它作為標籤。<br> 這在頁面上含有多個元素，而不適合使用 <code>&lt;label for=&quot;input&quot;&gt;</code> 的情況下非常有用。<br></li><li><code>aria-labelledby</code>：指定一個鍵盤快速鍵描述，將其用作圖片的 <code>alt</code> 文字的替代方案。 透過指定頁面上現有的資訊作為圖片的 <code>alt</code> 文字，而不是重複放在 <code>alt</code> 屬性內部，可以提升可達性。</li></ol></blockquote></li><li><p>States<br></p><blockquote><p>定義目前元素狀態的特殊屬性，例如 <code>aria-disabled=&quot;true&quot;</code> 是對螢幕報讀器指定表單輸入目前是停用的狀態。<br></p></blockquote><blockquote><p>狀態不同於屬性，在於屬性在應用程序整個生命週期中不會改變，而狀態通常會透過 JavaScript 改變。</p></blockquote></li></ul><p>有關 WAI-ARIA 屬性的重點是<span class="span-heightlight">不會影響網頁的任何內容</span>，除了透過瀏覽器無障礙 API 揭露資訊之外（螢幕報讀器即從中獲得資訊）。<br> 儘管 WAI-ARIA 屬性對 CSS 選擇元素很有用，但不會影響網頁結構、DOM 等。</p><p><a href="https://developer.mozilla.org/zh-TW/docs/Learn/Accessibility/WAI-ARIA_basics" target="_blank" rel="noreferrer">⋯ Reference</a></p><h2 id="_15-th" tabindex="-1">15 th <a class="header-anchor" href="#_15-th" aria-label="Permalink to &quot;15 th&quot;">​</a></h2><h3 id="js-效能優化" tabindex="-1">JS 效能優化 <a class="header-anchor" href="#js-效能優化" aria-label="Permalink to &quot;JS 效能優化&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>除非資料量巨大、對效能有要求的場景可以考慮這種極致的效能壓榨寫法，否則建議還是從可讀性、可維護性、易用性方面去寫程式碼！</p></div><ul><li><p>並行 <code>await</code></p><blockquote><p>❌ <b>使用 <code>for</code> 迴圈迭代 <code>await</code></b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> promise </span><span style="color:#89DDFF;">of</span><span style="color:#A6ACCD;"> promiseList) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">promise</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote><blockquote><p>✅ <b>使用 <code>Promise.all</code></b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">all</span><span style="color:#A6ACCD;">(promiseList)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote></li><li><p>避免使用 <code>new URL()</code></p><blockquote><p><code>new URL()</code> 是很耗時的！</p></blockquote><blockquote><p>❌ <b>使用 <code>new URL()</code></b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(url)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote><blockquote><p>✅ <b>操作字串</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 透過操作字串以得到新的 URL</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote></li><li><p>將正則提出來</p><blockquote><p>如果一個正則會被多次使用，最好提出來成為一個變數，因為這樣只會構建一次。</p></blockquote><blockquote><p>❌ <b>直接使用正則</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote><blockquote><p>✅ <b>將正則另外提出來</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">\\d</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">i</span></span>
<span class="line"><span style="color:#A6ACCD;">reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote></li><li><p>使用 <code>startsWith</code> / <code>slice</code> 代替正則 <code>replace</code></p><blockquote><p>正規表達式很強大、很方便，但大部分情況下效能不如 <code>String.prototype</code> 上的 API 好。</p></blockquote><blockquote><p>❌ <b>使用 <code>replace</code> 搭配正則</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">node:</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote><blockquote><p>✅ <b>使用 <code>startsWith</code> 搭配 <code>slice</code></b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> prefix </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">node:</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">startsWith</span><span style="color:#A6ACCD;">(prefix) </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#A6ACCD;">(prefix</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length) </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> str</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote></li><li><p>使用 <code>includes</code> 代替正則匹配</p><blockquote><ol><li>構建正規表達式比構建字串更為耗時。</li><li><code>RegExp.prototype.test()</code> 比 <code>String.prototype.includes()</code> 更耗時。</li></ol></blockquote><blockquote><p>❌ <b>使用正則匹配</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(str)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote><blockquote><p>✅ <b>使用 <code>includes</code></b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">includes</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote></li><li><p>使用 <code>===</code> 代替 <code>endsWith</code></p><blockquote><p>❌ <b>使用 <code>endsWith</code></b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">endsWith</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote><blockquote><p>✅ <b>使用 <code>===</code></b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">str[str</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote></li></ul><div class="tip custom-block"><p class="custom-block-title">Map</p><p>Map 為刪除鍵值對做了特別的效能優化，但是如果只涉及 <code>set</code>、<code>get</code>的操作，Map 和 Object 相比效能是不佔優勢的。</p></div><p><a href="https://juejin.cn/post/7224310314807345209?utm_source=gold_browser_extension" target="_blank" rel="noreferrer">⋯ Reference</a></p><h3 id="工具-4" tabindex="-1">工具 <a class="header-anchor" href="#工具-4" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><p><a href="https://github.com/ariya/phantomjs" target="_blank" rel="noreferrer">PhantomJS</a></p><blockquote><p>基於 WebKit 的伺服器端 JavaScript API，無需瀏覽器的支援即可實現對 Web 的支援，且原生支援各種 Web 標準，如：DOM 處理、JavaScript、CSS 選擇器、JSON、Canvas 和 SVG。<br> 主要是透過 JavaScript 和 CoffeeScript 控制 WebKit 的 CSS 選擇器、SVG 和 HTTP 網路等各個模組。</p></blockquote><blockquote><p><b>使用場景</b></p><ol><li>無需瀏覽器的 Web 測試：支援很多測試框架，如 YUI Test、Jasmine、WebDriver、Capybara、QUnit、Mocha 等。</li><li>頁面自動化操作：使用標準的 DOM API 或一些 JavaScript 框架（e.g. jQuery）訪問和操作 Web 頁面。</li><li>螢幕捕獲：以程式設計方式抓起 CSS、SVG 和 Canvas 等頁面內容，即可實現網路爬蟲應用。構建服務端 Web 圖形應用（e.g. 截圖服務）。</li><li>網路監控：自動進行網路效能監控、跟蹤頁面載入情況以及將相關監控的資訊以標準的 HAR 格式匯出。</li></ol></blockquote></li></ul><p><a href="https://cloud.tencent.com/developer/article/1043912" target="_blank" rel="noreferrer">⋯ Reference</a></p><h3 id="vscode-extension-1" tabindex="-1">VSCode Extension <a class="header-anchor" href="#vscode-extension-1" aria-label="Permalink to &quot;VSCode Extension&quot;">​</a></h3><ul><li><a href="https://github.com/nuxtrdev/nuxtr-vscode" target="_blank" rel="noreferrer">Nuxtr</a><blockquote><p>可以創建各種項目（e.g. Components、Pages、Layouts、Stores），從 VSCode 的指令面板執行 Nuxt.js 指令。<br> 從狀態列切換 Nuxt Devtools，管理 Nuxt.js 專案相依性，以一鍵的方式尋找、安裝和新增模組到 <code>nuxt.config.ts</code> 檔案中等等。</p></blockquote></li></ul>`,72),t=[n];function r(p,c,i,d,b,u){return a(),s("div",null,t)}const m=e(o,[["render",r]]);export{y as __pageData,m as default};
