import{_ as s,o as a,c as l,V as e}from"./chunks/framework.62adf23d.js";const o="/blog/assets/script.06dffac0.jpg",n="/blog/assets/defer.49cf1d98.jpg",p="/blog/assets/async.6534ed45.jpg",C=JSON.parse('{"title":"Nov. 2022","description":"","frontmatter":{},"headers":[],"relativePath":"daily-log/nov2022.md"}'),t={name:"daily-log/nov2022.md"},c=e(`<h1 id="nov-2022" tabindex="-1">Nov. 2022 <a class="header-anchor" href="#nov-2022" aria-label="Permalink to &quot;Nov. 2022&quot;">​</a></h1><h2 id="_1-st" tabindex="-1">1 st <a class="header-anchor" href="#_1-st" aria-label="Permalink to &quot;1 st&quot;">​</a></h2><h3 id="打包工具" tabindex="-1">打包工具 <a class="header-anchor" href="#打包工具" aria-label="Permalink to &quot;打包工具&quot;">​</a></h3><ul><li>Turbopack <blockquote><p>Turbopack 是針對 JavaScript 和 TypeScript 優化的增量打包工具。<br> 由 Webpack 的創建者和 Next.js 團隊使用 Rust 編寫。</p></blockquote></li></ul><h3 id="javascript-與-typescript-執行環境" tabindex="-1">JavaScript 與 TypeScript 執行環境 <a class="header-anchor" href="#javascript-與-typescript-執行環境" aria-label="Permalink to &quot;JavaScript 與 TypeScript 執行環境&quot;">​</a></h3><ul><li><p>Node.js</p><blockquote><p>基於 V8 引擎，並且是由 C++ 語言所建構。</p></blockquote></li><li><p>Deno</p><blockquote><p>基於 V8 引擎，並且是由 Rust 語言所建構。<br> 內建<span class="span-heightlight">支援 TypeScript 執行</span>。<br> 不再需要如 npm 的套件管理工具，同時扮演了套件管理系統的角色。<br> 如果要指定特定版本的套件也可以在 URL 中指定。<br></p></blockquote><p><a href="https://ianchen0119.gitbook.io/deno/an-zhuang-bing-shi-yong-deno/deno-gen-node.js-de-zhu-yao-cha-yi" target="_blank" rel="noreferrer">⋯ Reference</a></p></li></ul><h2 id="_3-rd" tabindex="-1">3 rd <a class="header-anchor" href="#_3-rd" aria-label="Permalink to &quot;3 rd&quot;">​</a></h2><h3 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li>Yup <blockquote><p>第三方驗證函式庫。<br> 用於<span class="span-heightlight">解析和驗證 JS 的生成器</span>，使用 Object 的驗證套件。<br> schema 可以說是對於「資料格式」與「數值」的一種描述架構，透過事先定義 schema 就像先訂好規則，然後要求 form 表單的資料要能夠匹配 schema，而 Yup 就是幫助我們整合這兩者的工具之一。<br></p><ul><li>優點</li></ul><ol><li>每個檢核子介面都設計淺顯易懂，且可以串接、好閱讀。</li><li>基本檢核一應俱全且統一。</li></ol><ul><li>缺點</li></ul><ol><li>yup 內的程式碼出錯時，不會有任何反應。<br></li></ol><p>建議都需要用 <code>try-catch</code> 包起來比較保險。</p></blockquote></li></ul><h2 id="_4-th" tabindex="-1">4 th <a class="header-anchor" href="#_4-th" aria-label="Permalink to &quot;4 th&quot;">​</a></h2><h3 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li><code>::selection</code><blockquote><p>此偽元素將樣式應用於文件中已被使用者選取強調的部分（e.g. 在文件上單擊並拖動鼠標）。</p></blockquote></li></ul><h3 id="css-框架" tabindex="-1">CSS 框架 <a class="header-anchor" href="#css-框架" aria-label="Permalink to &quot;CSS 框架&quot;">​</a></h3><ul><li><a href="https://www.protailwind.com/tips" target="_blank" rel="noreferrer">Tailwind Tips</a><blockquote><p>集合了有關 Tailwind 的有用小訣竅等。</p></blockquote></li></ul><h3 id="工具-1" tabindex="-1">工具 <a class="header-anchor" href="#工具-1" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://github.com/egoist/dropcode" target="_blank" rel="noreferrer">Dropcode</a><blockquote><p>簡單輕量的片段程式碼管理器。</p></blockquote></li></ul><h2 id="_5-th" tabindex="-1">5 th <a class="header-anchor" href="#_5-th" aria-label="Permalink to &quot;5 th&quot;">​</a></h2><h3 id="js" tabindex="-1">JS <a class="header-anchor" href="#js" aria-label="Permalink to &quot;JS&quot;">​</a></h3><ul><li><p><b>淺拷貝 Shallow Copy</b></p><blockquote><p>原始物件資料與複製物件資料<span class="span-heightlight">並非完全獨立</span>，可能第一層就有指向相同地址的資料，也可能第二層才有指向相同地址的資料。<br> 彼此資料內容的改變可能會<span class="span-heightlight">互相影響</span>。</p></blockquote></li><li><p><b>深拷貝 Deep Copy</b></p><blockquote><p>原始物件資料與複製物件資料<span class="span-heightlight">完全獨立</span>，沒有任何一層資料指向相同的地址。<br> 彼此資料內容的改變<span class="span-heightlight">不會互相影響</span>。<br></p><ol><li><code>JSON.parse(JSON.stringify(obj))</code><br><span class="span-mb"></span></li></ol><div class="warning custom-block"><p class="custom-block-title">某些值經過 <code>JSON.stringify/parse</code> 處理後，會產生變化：</p><ul><li><code>undefined</code>：會連同 key 一起消失。</li><li><code>NaN</code>：會被轉成 <code>null</code>。</li><li><code>Infinity</code>：會被轉成 <code>null</code>。</li><li><code>regExp</code>：會被轉成空物件 <code>{}</code>。</li><li><code>Date</code>：會被轉成 <code>String</code>。<br></li></ul></div><ol start="2"><li><code>_.cloneDeep(obj)</code>：ladash 內部的 API。</li><li>寫一份遞迴函式，遍歷 Object data 每一層級資料，將其完全複製新的一份。</li></ol></blockquote><p><img src="https://www.programfarmer.com/article/javaScript/javascript-shallow-copy-deep-copy/05.png" alt=""><br><a href="https://www.programfarmer.com/articles/javaScript/javascript-shallow-copy-deep-copy" target="_blank" rel="noreferrer">⋯ 圖片來源</a></p></li></ul><h2 id="_6-th" tabindex="-1">6 th <a class="header-anchor" href="#_6-th" aria-label="Permalink to &quot;6 th&quot;">​</a></h2><h3 id="技術" tabindex="-1">技術 <a class="header-anchor" href="#技術" aria-label="Permalink to &quot;技術&quot;">​</a></h3><ul><li><p><b>CSR (Client-Side Rendering)</b></p><blockquote><p>表示所有的<span class="span-heightlight">頁面渲染 (render) 都透過瀏覽器端的 JS 來完成</span>。<br> 所有的邏輯、取資料、路由、template 都在客戶端處理。</p><ul><li>優點</li></ul><ol><li>頁面的更新或是換頁都不需要刷新頁面，在使用體驗上相較於傳統的 SSR 應用會順暢許多。</li></ol><ul><li>缺點</li></ul><ol><li>載入速度通常較慢，尤其是在低階的行動裝置上。<br><span class="span-mb"></span> 原因如前所述，因為 CSR 要等待 JS 的下載及執行 render ，所以 CSR 頁面載入的前幾秒，頁面上會沒有東西或是只有一些骨架。<br> 使用者必須要等待一段時間才能看到頁面的內容，相對來說會是較差的使用者體驗。</li><li>SEO 較差，因為 CSR 的頁面對於爬蟲是比較不友善的。<br><span class="span-mb"></span> 雖然爬蟲有辦法執行 JS，但爬蟲也有一些 JavaScript render 頁面的限制。</li></ol></blockquote></li><li><p><b>SSR (Server-Side Rendering)</b></p><blockquote><p>表示伺服器收到使用者的請求之後，<span class="span-heightlight">在伺服器端生成完整的 HTML，再回傳給使用者</span>。<br> 因為生成 HTML 的時候會在伺服器端先取得內部或外部 API 資料，所以相較於 CSR 從瀏覽器端取資料的模式，SSR 可以省去多次的來回往返。</p><ul><li>優點</li></ul><ol><li>需要的 JS 比較少，因此有較快的 TTI，可以較快開始互動。<br><span class="span-mb"></span> 原因是相較於 CSR 所有 render 的邏輯都包含在 JS 中，SSR 已經在伺服器端把 render 的工作做完了，SSR 方案中瀏覽器端需要的 JS 理論上會比較少，所以會比較快達到 TTI。<br></li><li>有更多的 JS 預算可以留給其他第三方 JS 使用。</li><li>SEO 較佳。<br><span class="span-mb"></span> 因為 SSR 產生的完整 HTML 可以很容易的被爬蟲解讀，不需要想辦法執行 JS。</li></ol><ul><li>缺點</li></ul><ol><li>較慢的 TTFB。<br><span class="span-mb"></span> 因為在伺服器產生完整的 HTML 很花時間。如果同時有許多人造訪 server 造成負擔很重，或是有一些非常慢的 API，都有可能讓 server 的回應速度非常慢。</li><li>互動性體驗差。<br><span class="span-mb"></span> 因為 SSR 的頁面在每次互動之間都要重新讀取頁面，這在使用體驗上就不如 CSR 的頁面順暢，也是現代 web app 大多數會採用 CSR 方案的主要原因。</li></ol></blockquote><p><a href="https://shubo.io/rendering-patterns/" target="_blank" rel="noreferrer">⋯ Reference</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>FCP (First Contentful Paint，使用者可以看到頁面上的重要內容的時間點)</li><li>TTI (Time-to-Interactive，使用者首次可以跟頁面互動的時間點)<br> 在 TTI 之前，使用者點畫面上任何東西都不會有反應。</li><li>TTFB (Time to First Byte，從瀏覽頁面的動作開始到瀏覽器收到第一個 byte 所需要的時間)</li></ul></div></li></ul><h2 id="_7-th" tabindex="-1">7 th <a class="header-anchor" href="#_7-th" aria-label="Permalink to &quot;7 th&quot;">​</a></h2><h3 id="css-1" tabindex="-1">CSS <a class="header-anchor" href="#css-1" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li><p>偽元素</p><blockquote><p>不是真正網頁裡的元素，但行為與表現和真正的網頁元素一樣，也可以對其使用 CSS 操控。<br> 在 W3C 的定義裡總共有五個偽元素：<br><code>::before</code>、<code>::after</code>、<code>::first-line</code>、<code>::first-letter</code> 和 <code>::selection</code>。</p></blockquote></li><li><p><code>::before</code> 與 <code>::after</code></p><blockquote><p>最常使用的偽元素，兩者都是以 <code>display: inline-block;</code> 的屬性存在。<br><code>::before</code> 是在原本的元素<span class="span-heightlight">之前</span>加入內容，<code>::after</code> 則是在原本的元素<span class="span-heightlight">之後</span>加入內容。<br> 同時偽元素也會<span class="span-heightlight">繼承原本元素的屬性</span>。<br></p></blockquote><blockquote><p>一定要具備 content 的屬性，就算是只有 <code>content: &quot;&quot;;</code> 都可以，因為沒有 content 的偽元素是不會出現在畫面上的，然而 content 是個很特別的屬性，它可以使用 attr 直接獲取內容元素的屬性值（attribute）。<br><span class="span-heightlight">content 內容可以相加</span>的，直接使用一個空白鍵就可以不斷的累加下去。<br></p></blockquote><blockquote><p>偽元素的內容<span class="span-heightlight">實際上不存在網頁裡</span>（如果打開瀏覽器的開發者工具，是看不到內容的）。<br> 如果在裡頭<span class="span-heightlight">放了太多的重要的內容，反而會影響到 SEO 的成效</span>，因此對於使用偽元素的定位，還是當作輔助性質會比較恰當。</p></blockquote></li></ul><h2 id="_10-th" tabindex="-1">10 th <a class="header-anchor" href="#_10-th" aria-label="Permalink to &quot;10 th&quot;">​</a></h2><h3 id="css-2" tabindex="-1">CSS <a class="header-anchor" href="#css-2" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li><code>initial</code>：恢復為該 css 屬性的初始值。 <blockquote><p>每個 css 屬性都有其初始值（initial value），例如背景色的初始值是透明。</p></blockquote></li><li><code>inherit</code>：繼承最近的父層 css 屬性值。 <blockquote><p>每個 css 屬性也都有繼承性（inherited）。<br> 例如 <code>color</code> 有繼承性，而 <code>background-color</code> 則無。</p></blockquote></li><li><code>unset</code>：是 <code>inherit</code> 和 <code>initial</code> 的結合。 <blockquote><p>在屬性有繼承性時，設定 <code>unset</code> 會等同於 <code>inherit</code> 的功能。<br> 無繼承性時，設定 <code>unset</code> 則等同於 <code>initial</code>。</p></blockquote></li><li><code>revert</code>：優先恢復為瀏覽器預設。 <blockquote><p>無瀏覽器預設則等同 <code>unset</code>。</p></blockquote></li></ul><h3 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h3><ul><li><code>&lt;iframe&gt;</code>：內嵌框架 (Inline Frame) <blockquote><p>所謂的內嵌框架（內聯框架），用來<span class="span-heightlight">在一個 HTML 網頁裡面嵌入另外一個 HTML 網頁</span>。<br> 但一般如果不是用來嵌入外站的內容，還是盡量少用 <code>iframe</code>，因為對於網頁效能、維護性和 SEO 有非正面的影響。</p><ul><li><code>src</code>：指定要被嵌入的網頁的網址 (URL)</li><li><code>height</code>：指定 iframe 的高度，單位為像素 (pixel)</li><li><code>width</code>：指定 iframe 的寬度，單位為像素 (pixel)</li><li><code>name</code>：指定 iframe 的名稱</li><li><code>sandbox</code>：當有這屬性時，表示針對 iframe 裡面的網頁啟用一些限制條件。<br> 屬性值如果留空表示啟用所有限制，當有設定值的時候表示移除這些限制，你可以用空格設定移除多個限制條件。<br></li></ul><p><a href="https://www.fooish.com/html/iframe-tag.html" target="_blank" rel="noreferrer">⋯ Reference</a></p></blockquote></li></ul><h2 id="_12-nd" tabindex="-1">12 nd <a class="header-anchor" href="#_12-nd" aria-label="Permalink to &quot;12 nd&quot;">​</a></h2><ul><li><code>clamp(MIN, VAL, MAX)</code><blockquote><p>包含三個數值，定義「最大值、最小值以及中間的數值」。<br> 其中 <code>MIN</code> 表示最小值，<code>VAL</code> 表示首選值，<code>MAX</code> 表示最大值。</p><ol><li>如果 <code>VAL</code> 在 <code>MIN</code> 和 <code>MAX</code> 範圍之間，則使用 <code>VAL</code> 作為函式回傳值。</li><li>如果 <code>VAL &gt; MAX</code>，則使用 <code>MAX</code> 作為回傳值。</li><li>如果 <code>VAL &lt; MIN</code>，則使用 <code>MIN</code> 作為回傳值。<br></li></ol><p>範例：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">clamp</span><span style="color:#A6ACCD;">(200px</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">%,</span><span style="color:#A6ACCD;"> 300px)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote></li></ul><h2 id="_15-th" tabindex="-1">15 th <a class="header-anchor" href="#_15-th" aria-label="Permalink to &quot;15 th&quot;">​</a></h2><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><ul><li><a href="./../notes/front-end/package-json.html">Package.json</a><blockquote><p>個人筆記連結</p></blockquote></li></ul><h2 id="_19-th" tabindex="-1">19 th <a class="header-anchor" href="#_19-th" aria-label="Permalink to &quot;19 th&quot;">​</a></h2><h3 id="javascript" tabindex="-1">Javascript <a class="header-anchor" href="#javascript" aria-label="Permalink to &quot;Javascript&quot;">​</a></h3><ul><li><a href="./../notes/front-end/js-prototype.html">prototype 原型與原型鏈</a><blockquote><p>個人筆記連結</p></blockquote></li></ul><h2 id="_21-st" tabindex="-1">21 st <a class="header-anchor" href="#_21-st" aria-label="Permalink to &quot;21 st&quot;">​</a></h2><h3 id="es-module" tabindex="-1">ES module <a class="header-anchor" href="#es-module" aria-label="Permalink to &quot;ES module&quot;">​</a></h3><p>ES6 版本新加了 <code>import</code> 和 <code>export</code>，引入了<span class="span-heightlight">模組化</span>的思維，讓 JavaScript 在開發大型複雜應用程式時，更為方便且易於管理。<br> 只要在 <code>&lt;script&gt;</code> 加上 <code>type=&quot;module&quot;</code> 的 attribute，就可以在 <code>script</code> 裡面使用 <code>import</code> 與 <code>export</code> 。</p><ul><li>Default exports &amp; Named exports</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Default exports</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Named exports</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> monthDays </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">31</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> log </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>import 靜態載入</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line highlighted"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> weekDays</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">monthDays</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">log</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./script.js</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(weekDays) </span><span style="color:#676E95;font-style:italic;">// 7</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(monthDays) </span><span style="color:#676E95;font-style:italic;">// 31</span></span>
<span class="line"><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// Hello, world!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>import 動態載入</li></ul><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#A6ACCD;">btn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">import</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./modules/test.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;font-style:italic;">result</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">result</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>有些 script 只有特定情況才需要時可以使用動態載入，透過管理回傳的 <code>Promise</code> 物件，盡可能提升 performance，避免一次性載入太多用不到的 js，造成首次白畫面過長。</p></blockquote><ul><li>優點</li></ul><ol><li>每個 <code>.js</code> 都是獨立的作用域（scope），不用擔心變數汙染。</li><li>每個 <code>.js</code> 都自行 <code>import</code> 自己的依賴，沒有順序相依問題。</li></ol><p><a href="https://ithelp.ithome.com.tw/m/articles/10303710" target="_blank" rel="noreferrer">⋯ Reference</a></p><h2 id="_24-th" tabindex="-1">24 th <a class="header-anchor" href="#_24-th" aria-label="Permalink to &quot;24 th&quot;">​</a></h2><h3 id="css-3" tabindex="-1">CSS <a class="header-anchor" href="#css-3" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li><p>Positioning schemes（定位規則）</p><blockquote><p><b>normal flow</b><br> HTML 元素就是 <code>inline</code> 跟 <code>block</code> 兩類，所以 <code>normal flow</code> 就是由水平排列，以及垂直向下排列這樣的格式來渲染元素。<br> 除非特別聲明，否則每個元素所產生的 <code>box</code> 都處在 <code>normal flow</code> 中。</p></blockquote><blockquote><p><b>float</b><br><code>box</code> 從原本的 normal flow 中脫離出來，並以 <code>left</code>、<code>right</code> 參數來定位，通常用在文繞圖的排版中。</p></blockquote><blockquote><p><b>absolute positioning</b><br> 和 float 同為 <code>out of flow</code>（脫離普通流）的定位，並以 <code>top</code>、<code>left</code>、<code>bottom</code>、<code>right</code> 搭配數值予以定位。</p></blockquote></li><li><p>Formatting context（格式化上下文）</p><blockquote><p>是 CSS 中對於排版的概念，不同的格式化環境會有不同的渲染規則，決定box怎麼被排列、怎麼影響跟其它 box 的相對位置，也決定了其子元素的排列。<br><span class="span-mb"></span><b>formatting context 有以下類型：</b></p><ol><li>BFC (Block formatting context)</li><li>IFC (Inline formatting context)</li><li>FFC (Flex formatting context)</li><li>GFC (Grid formatting context)</li></ol><p>以上都屬於 normal flow 的 範圍。<br><span class="span-mb"></span> 除了原本元素產生的原生 <code>box</code> 有 block-level box 跟 inline-level box 之外，也可以用 CSS 的 <code>display</code> 屬性來改變 <code>box</code> 所參與的 formatting context。<br> 有些屬性可以對 <code>box</code> 內創造一個 formatting context 的環境，例如生成 BFC、FFC、GFC 渲染環境給後代元素，而 IFC 是指元素參與 IFC 的佈局。</p></blockquote></li><li><p>BFC（Block formatting context）</p><blockquote><p>是一個<span class="span-heightlight">獨立的渲染區域</span>，只有 Block-level box 參與，規定了內部的 block-level box 如何佈局，並且<span class="span-heightlight">與這個區域外部毫無關聯</span>。</p></blockquote><blockquote><p><b>佈局規則</b><br></p><ol><li>內部的 box 會在垂直方向，一個接一個地放置。</li><li>box 垂直方向的距離由 margin 決定。<br>屬於同一個 BFC 的兩個相鄰 Box 的 margin 會發生重疊。</li><li>每個元素的 margin box 的左邊， 與包含 block border box 的左邊相接觸（對於從左往右的格式化，否則相反），即使存在浮動也是如此。</li><li>BFC 的區域不會與 float box 重疊。</li><li>BFC 就是頁面上的一個隔離的獨立容器，容器裡面的子元素不會影響到外面的元素；反之也如此。</li><li>計算 BFC 的高度時，浮動元素也參與計算。</li></ol></blockquote><blockquote><p><b>主要作用</b><br></p><ol><li>自適應兩欄佈局</li><li>可以阻止元素被浮動元素覆蓋</li><li>可以包含浮動元素（清除內部浮動）</li><li>分屬於不同的 BFC 時可以阻止 margin 重疊</li></ol></blockquote></li></ul><h2 id="_26-th" tabindex="-1">26 th <a class="header-anchor" href="#_26-th" aria-label="Permalink to &quot;26 th&quot;">​</a></h2><h3 id="工具-2" tabindex="-1">工具 <a class="header-anchor" href="#工具-2" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><p><a href="./../notes/front-end/axios.html">axios</a></p><blockquote><p>個人筆記連結</p></blockquote></li><li><p><a href="https://github.com/typicode/json-server" target="_blank" rel="noreferrer">json server</a></p><blockquote><p>可以透過 JSON 格式，快速產生 DEMO 用的 API。</p></blockquote></li></ul><h2 id="_28-th" tabindex="-1">28 th <a class="header-anchor" href="#_28-th" aria-label="Permalink to &quot;28 th&quot;">​</a></h2><h3 id="vite-deploy" tabindex="-1">Vite deploy <a class="header-anchor" href="#vite-deploy" aria-label="Permalink to &quot;Vite deploy&quot;">​</a></h3><ul><li>GitHub Pages</li></ul><ol><li>在 <code>vite.config.js</code> 內部設定 <code>base</code> 名稱（通常為 <code>&#39;/&lt;REPO&gt;/&#39;</code>）</li></ol><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight has-highlighted-lines"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line highlighted"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">base</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/&lt;REPO&gt;/</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li>在專案目錄內新建檔案 <code>deploy.sh</code> 並貼上以下內容</li></ol><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/env sh</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># delete dist folder</span></span>
<span class="line"><span style="color:#FFCB6B;">rm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-rf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># abort on errors</span></span>
<span class="line"><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># build</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># navigate into the build output directory</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dist</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># place .nojekyll to bypass Jekyll processing</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.nojekyll</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">checkout</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-B</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-A</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deploy</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">USERNAM</span><span style="color:#A6ACCD;">E</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">/</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">REP</span><span style="color:#A6ACCD;">O</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">master:gh-pages</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><ol start="3"><li>執行 <code>deploy.sh</code> 檔案</li></ol><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">sh deploy.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>將會建出新的 <code>dist</code> 目錄並將專案內容 build 完放進 <code>dist</code> 中。<br> 再將 <code>dist</code> 目錄內容 <code>push</code> 到 GitHub 專案上的 <code>gh-pages</code> 分支上。</p></blockquote><p><a href="https://vitejs.dev/guide/static-deploy.html#github-pages" target="_blank" rel="noreferrer">⋯ Reference</a></p><h3 id="js-1" tabindex="-1">JS <a class="header-anchor" href="#js-1" aria-label="Permalink to &quot;JS&quot;">​</a></h3><ul><li><code>new URL(url [, base])</code><blockquote><ol><li><code>url</code><br> 是一個表示絕對或相對 URL 的 <code>DOMString</code>。<br> 如果 <code>url</code> 是相對 URL，則會將 <code>base</code> 用作基準 URL。<br> 如果 <code>url</code> 是絕對 URL，則無論參數 <code>base</code> 是否存在，都將被忽略。</li><li><code>base</code><br> 是一個表示基準 URL 的 <code>DOMString</code>，在 <code>url</code> 是相對 URL 時才會有效果。<br> 如果未指定，則默認為 <code>&#39;&#39;</code>。</li></ol></blockquote></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://exp.com/js/2#tag=es6</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><table><thead><tr><th>屬性</th><th>內容名稱</th><th>範例</th></tr></thead><tbody><tr><td><code>url.href</code></td><td>完整網址（URL）</td><td><code>&quot;https://exp.com/js/2#tag=es6&quot;</code></td></tr><tr><td><code>url.hash</code></td><td>網址中的 Hash 部分</td><td><code>&quot;#tag=es6&quot;</code></td></tr><tr><td><code>url.host</code></td><td>網址中的主機名稱</td><td><code>&quot;exp.com&quot;</code></td></tr><tr><td><code>url.pathname</code></td><td>網頁路徑部分</td><td><code>&quot;/js/2&quot;</code></td></tr><tr><td><code>url.protocol</code></td><td>網址中的通訊協定部分</td><td><code>&quot;https:&quot;</code></td></tr></tbody></table><ul><li>取得網頁參數部分</li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">URL</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">https://exp.com?tag=es6&amp;page=2&amp;tag=url</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> params </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">search </span><span style="color:#676E95;font-style:italic;">// &quot;tag=es6&amp;page=2&amp;tag=url&quot;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> params </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> url</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">searchParams </span><span style="color:#676E95;font-style:italic;">// URLSearchParams {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">params</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">has</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">page</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">params</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tag</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;font-style:italic;">// es6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_30-th" tabindex="-1">30 th <a class="header-anchor" href="#_30-th" aria-label="Permalink to &quot;30 th&quot;">​</a></h2><h3 id="js-2" tabindex="-1">JS <a class="header-anchor" href="#js-2" aria-label="Permalink to &quot;JS&quot;">​</a></h3><ul><li><code>async</code>, <code>defer</code> attributes</li></ul><ol><li><code>&lt;script&gt;</code><img src="`+o+`" alt=""></li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...content before script...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 當 JS 還沒下載與解析完前，HTML 的繪製會卡在這，因此需等到 script 載入完後，才會看到下面的內容 --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...content after script...</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="2"><li><code>&lt;script defer&gt;</code><img src="`+n+`" alt=""></li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo1.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">defer</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo2.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">defer</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>網頁繪製不會停下， <code>demo.js</code> 在背景下載，不會阻塞頁面的繪製，並且會等到 DOM 準備好後（但 <code>DOMContentLoaded</code> 事件發生前）才加以執行。<br> 因此相當實用，且目前瀏覽器多已經支援。<br> 和傳統只使用 <code>&lt;script&gt;</code> 的方式一樣，使用 <code>defer</code> 能夠保證 <code>scripts</code> 的檔案會按照 document 中的順序執行。<br> 以上面的程式碼為例，<code>demo1.js</code> 和 <code>demo2.js</code> 會同時才背景開始被下載，但即使 <code>demo2.js</code> 比較早下載完成，瀏覽器仍會確保 <code>demo1.js</code> 執行完後才執行 <code>demo2.js</code>。</p></blockquote><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>defer</code> 適合用在需要等待 <code>DOM</code> 完成後才能被執行的 JS，後者多個 JS 檔彼此之間有相依性的情況。</p></div><ol start="3"><li><code>&lt;script async&gt;</code><img src="`+p+`" alt=""></li></ol><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo1.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">demo2.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">async</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>和 <code>defer</code> 類似的是 <code>demo1.js</code> 和 <code>demo2.js</code> 都會在背景下載，但不同的地方在於，<code>async</code> 會在該 JS 檔下載完成後，就會馬上被執行。<br> 它不會等待 <code>DOM</code> ready 後才執行，也不保證各 <code>script</code> 間執行的順序，也就是說，如果 <code>demo2.js</code> 比 <code>demo1.js</code> 還快被下載完成的話，它就會先被執行。<br> 因此，<code>async</code> 適合用在每個 <code>script</code> 的 JS 檔彼此之間沒有相依性，不需要誰先執行才能換另一個執行的這種情況（例如，Google Analytics）。</p></blockquote><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>async</code> 適合用在各 <code>script</code> 間的 JS 檔沒有相依的情況下使用，例如 Ads、GA 等等。</p></div><p><a href="https://pjchender.dev/javascript/js-async-defer/" target="_blank" rel="noreferrer">⋯ Reference</a></p><h3 id="瀏覽器私有屬性" tabindex="-1">瀏覽器私有屬性 <a class="header-anchor" href="#瀏覽器私有屬性" aria-label="Permalink to &quot;瀏覽器私有屬性&quot;">​</a></h3><ul><li><code>-moz-</code>：代表 firefox 瀏覽器私有屬性</li><li><code>-ms-</code>：代表 IE 瀏覽器私有屬性</li><li><code>-webkit-</code>：代表 chrome、safari 私有屬性</li><li><code>-o-</code>：代表 opera 私有屬性</li></ul><h3 id="資源" tabindex="-1">資源 <a class="header-anchor" href="#資源" aria-label="Permalink to &quot;資源&quot;">​</a></h3><ul><li><a href="https://caniuse.com/" target="_blank" rel="noreferrer">Can I Use</a><blockquote><p>可以用來查詢 HTML、CSS 的瀏覽器兼容度。</p></blockquote></li></ul>`,92),r=[c];function i(d,b,h,u,y,D){return a(),l("div",null,r)}const m=s(t,[["render",i]]);export{C as __pageData,m as default};
