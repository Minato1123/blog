import{_ as s,o as a,c as n,V as l}from"./chunks/framework.fa42150b.js";const C=JSON.parse('{"title":"May 2024","description":"","frontmatter":{"outline":2},"headers":[],"relativePath":"daily-log/year2024/may2024.md"}'),e={name:"daily-log/year2024/may2024.md"},o=l(`<h1 id="may-2024" tabindex="-1">May 2024 <a class="header-anchor" href="#may-2024" aria-label="Permalink to &quot;May 2024&quot;">​</a></h1><h2 id="_3-rd" tabindex="-1">3 rd <a class="header-anchor" href="#_3-rd" aria-label="Permalink to &quot;3 rd&quot;">​</a></h2><h3 id="套件" tabindex="-1">套件 <a class="header-anchor" href="#套件" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><a href="https://github.com/formkit/tempo" target="_blank" rel="noreferrer">Tempo</a><blockquote><p>用於處理 Date 物件的工具集合，這與其他提供自定義日期原語的函式庫有所不同。<br> Tempo 利用 JavaScript 的 <code>Intl.DateTimeFormat</code> 來提取複雜的資料，例如：時區偏移和具備本地化的日期格式，提供了一個簡單的 API 來格式化、解析和操作日期。</p></blockquote></li></ul><h3 id="框架" tabindex="-1">框架 <a class="header-anchor" href="#框架" aria-label="Permalink to &quot;框架&quot;">​</a></h3><ul><li><a href="https://h3.unjs.io/" target="_blank" rel="noreferrer">h3</a><blockquote><p>輕量且 composable 的 JavaScript 伺服器框架，透過適配器設計來與各種 JavaScript 執行環境協同工作。</p></blockquote></li></ul><h2 id="_7-th" tabindex="-1">7 th <a class="header-anchor" href="#_7-th" aria-label="Permalink to &quot;7 th&quot;">​</a></h2><h3 id="套件-1" tabindex="-1">套件 <a class="header-anchor" href="#套件-1" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><p><a href="https://alova.js.org/" target="_blank" rel="noreferrer">alova.JS</a></p><blockquote><p>輕量的請求策略函式庫，提供了一整套解決方案來處理複雜的請求場景。</p></blockquote><blockquote><p>範例：</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> response </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> alova</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api/user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> loading</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> error</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> data </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">useRequest</span><span style="color:#A6ACCD;">(alova</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/api/user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote></li></ul><h3 id="工具" tabindex="-1">工具 <a class="header-anchor" href="#工具" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://github.com/HuolalaTech/page-spy-web" target="_blank" rel="noreferrer">PageSpy</a><blockquote><p>用於在 Web、小程序和 HarmonyOS 應用平台上 debug 專案的工具。<br> 基於對原生 Web API 的封裝，它在呼叫時過濾並轉換原生方法的參數，並轉換為特定格式的訊息供偵錯客戶端使用。<br> 偵錯程式在接收到訊息資料後，會以互動式開發工具般的介面呈現，便於檢視。</p></blockquote></li></ul><h3 id="元件庫" tabindex="-1">元件庫 <a class="header-anchor" href="#元件庫" aria-label="Permalink to &quot;元件庫&quot;">​</a></h3><ul><li><a href="https://github.com/JosephusPaye/Keen-UI/tree/master#keen-ui" target="_blank" rel="noreferrer">Keen UI</a><blockquote><p>Vue.js 的 UI Libraru，擁有簡單的 API，並非一個 CSS 框架。 不包含網格系統、排版等樣式，相反地，它專注於需要 JavaScript 的互動元件。</p></blockquote></li></ul><h2 id="_9-th" tabindex="-1">9 th <a class="header-anchor" href="#_9-th" aria-label="Permalink to &quot;9 th&quot;">​</a></h2><h3 id="工具-1" tabindex="-1">工具 <a class="header-anchor" href="#工具-1" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://mswjs.io/" target="_blank" rel="noreferrer">MSW</a><blockquote><p>Mock Service Worker，API 模擬函式庫，可以撰寫與客戶端無關的模擬，並在任何框架、工具和環境中複用。</p></blockquote></li></ul><h3 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li><p><code>shape-outside</code></p><blockquote><p>控制內容如何圍繞浮動元素的邊界框進行環繞。 通常這樣做是為了使文本能夠重新流動在如圓形、橢圓形或多邊形等形狀上。</p><ul><li><code>circle()</code>：用於製作圓形。</li><li><code>ellipse()</code>：用於製作橢圓形。</li><li><code>inset()</code>：用於製作矩形。</li><li><code>polygon()</code>：用於創建具有 3 個或更多頂點的任意形狀。</li><li><code>url()</code>：指定用於圍繞文本的圖像。</li><li><code>initial</code>：浮動區域不受影響。</li><li><code>inherit</code>：從父元素繼承 <code>shape-outside</code> 值。</li></ul></blockquote><blockquote><p><b>範例：</b></p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">shape-outside-demo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">float</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> left</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">shape-outside</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">circle</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote><blockquote><div><div class="shape-outside-demo"></div><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Officiis impedit libero esse odio excepturi fuga est ut itaque a quod suscipit, rerum asperiores. Consequuntur voluptates illo rerum recusandae pariatur asperiores, aspernatur, saepe ipsum error dolorem, quod inventore possimus modi deleniti tenetur et officiis. Nemo ab in totam ratione sequi error, ea dolorum repudiandae omnis, eaque facere impedit fugiat. Dolorum distinctio autem sequi enim quidem esse accusamus repudiandae voluptatum nobis, velit, molestiae. Eaque maiores, harum. Saepe esse repellendus sint. Labore provident optio quis commodi quod quaerat quo similique perspiciatis libero facere. Suscipit odit quas nemo, enim laudantium, provident repellendus natus nostrum facilis expedita adipisci qui, harum minus quidem officia cupiditate repellat ut praesentium. Possimus corporis, error atque ex adipisci, illum suscipit pariatur saepe impedit aliquam amet eos reiciendis quidem hic, nisi. Sint nobis modi, nesciunt quasi placeat quia. Veniam inventore corrupti quisquam illum debitis vitae accusamus nobis alias cum iste error magnam, cupiditate earum! Incidunt at consequuntur, rem ipsa odio ipsum deleniti repudiandae blanditiis harum ut in, fugit officia rerum ad, corporis dolore! </p></div></blockquote></li></ul><h2 id="_13-rd" tabindex="-1">13 rd <a class="header-anchor" href="#_13-rd" aria-label="Permalink to &quot;13 rd&quot;">​</a></h2><h3 id="javascript-es15" tabindex="-1">JavaScript ES15 <a class="header-anchor" href="#javascript-es15" aria-label="Permalink to &quot;JavaScript ES15&quot;">​</a></h3><ul><li><p><code>Promise.withResolvers</code></p><blockquote><p>建立一個 promise，直接回傳 resolve 和 reject 的 callback。</p></blockquote><blockquote><p><b>範例：</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> promise</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> reject </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">withResolvers</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Resolved after 2 seconds</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2000</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote></li><li><p><code>Object.groupBy</code></p><blockquote><p>可以按照特定屬性將陣列中的物件進行分組，讓資料處理變得更加容易。</p></blockquote><blockquote><p><b>範例：</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> pets </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">category</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Candy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">		</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">category</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cat</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Yoyo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">		</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">category</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Bob</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">		</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">category</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rabbit</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Med</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">		</span></span>
<span class="line"><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">groupBy</span><span style="color:#A6ACCD;">(pets</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">pet</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> pet</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">category)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><b>結果：</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#FFCB6B;">dog</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> category</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Candy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> category</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dog</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Bob</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">	]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#FFCB6B;">cat</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> category</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">cat</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Yoyo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">	]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#FFCB6B;">rabbit</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> category</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">rabbit</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> name</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Med</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">	]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></blockquote></li><li><p><code>Temporal</code></p><blockquote><p>以更直觀和高效的方式處理日期和時間。 例如：Temporal API 提供了新的日期、時間和持續時間的資料類型，以及用於建立、操作和格式化這些值的函數。</p></blockquote><blockquote><p><b>範例：</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> today </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Temporal</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PlainDate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">year</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2023</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">month</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">11</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">day</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">19</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">today</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// 2023-11-19</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> duration </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Temporal</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Duration</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">hours</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">minutes</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">30</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> tomorrow </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> today</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">add</span><span style="color:#A6ACCD;">(duration)</span></span>
<span class="line"><span style="color:#A6ACCD;">tomorrow</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// 2023-11-20</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote></li><li><p>Records &amp; Tuples</p><blockquote><p>以簡潔和型別安全的方式來建立物件和陣列。</p><ul><li>Records 類似於物件，但具有具體類型的固定屬性集。</li><li>Tuples 類似於陣列，但具有固定長度，每個元素可以具有不同類型。</li></ul></blockquote><blockquote><p><b>範例：</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> record </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> #</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">JavaScript</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">year</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2024</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(record</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// JavaScript</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></blockquote></li></ul><p><a href="https://juejin.cn/post/7349410765525483555" target="_blank" rel="noreferrer">⋯ Reference</a></p><h2 id="_15-th" tabindex="-1">15 th <a class="header-anchor" href="#_15-th" aria-label="Permalink to &quot;15 th&quot;">​</a></h2><h3 id="元件庫-1" tabindex="-1">元件庫 <a class="header-anchor" href="#元件庫-1" aria-label="Permalink to &quot;元件庫&quot;">​</a></h3><ul><li><a href="https://banana-ui.com/" target="_blank" rel="noreferrer">Banana UI</a><blockquote><p>基於 Web Component 的元件庫，支援大部分 Web 框架並支援 SSR。</p></blockquote></li></ul><h3 id="工具-2" tabindex="-1">工具 <a class="header-anchor" href="#工具-2" aria-label="Permalink to &quot;工具&quot;">​</a></h3><ul><li><a href="https://gtranslate.io/" target="_blank" rel="noreferrer">G|translate</a><blockquote><p>支援 HTML 頁面自動翻譯工具。</p></blockquote></li></ul><h3 id="http" tabindex="-1">HTTP <a class="header-anchor" href="#http" aria-label="Permalink to &quot;HTTP&quot;">​</a></h3><ul><li><p><code>Content-Disposition</code></p><blockquote><p>在常規的 HTTP response 中，<code>Content-Disposition</code> response header 是一個 header，用於指示內容是預期在瀏覽器 inline 顯示，即作為網頁或網頁的一部分顯示，或是作為附件下載並本地儲存。</p></blockquote><blockquote><p>在 <code>multipart/form-data</code> body 中，HTTP <code>Content-Disposition</code> 通用 header 是一個必須在多部分 body 的每個子部分使用的 header，以提供該欄位適用的資訊。<br> 子部分由 <code>Content-Type</code> 標頭中定義的邊界分隔，在 body 本身上使用時，<code>Content-Disposition</code> 沒有任何效果。</p></blockquote><blockquote><p><code>Content-Disposition</code> 標頭在電子郵件的 MIME 訊息的更大範圍中定義，但只有一部分參數適用於 HTTP 表單和 POST 請求。<br> 只有值 <code>form-data</code> 以及可選的指令 <code>name</code> 和 <code>filename</code> 可以在 HTTP 上下文中使用。</p></blockquote></li></ul><h2 id="_16-th" tabindex="-1">16 th <a class="header-anchor" href="#_16-th" aria-label="Permalink to &quot;16 th&quot;">​</a></h2><h3 id="套件-2" tabindex="-1">套件 <a class="header-anchor" href="#套件-2" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><p><a href="https://github.com/unplugin/unplugin-inline-enum" target="_blank" rel="noreferrer">unplugin-inline-enum</a></p><blockquote><p>inline enum 值以減少 bundle 的大小，簡化 JavaScript 中生成的列舉。</p></blockquote><blockquote><p><b>範例：</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestEnum</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(TestEnum</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> TestEnum</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><b>Before：</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> TestEnum</span></span>
<span class="line"><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">TestEnum</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">TestEnum</span><span style="color:#F07178;">[(</span><span style="color:#A6ACCD;">TestEnum</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">TestEnum</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)(TestEnum </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> (TestEnum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(TestEnum</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> TestEnum</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">b)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><b>After：</b></p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> TestEnum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></blockquote></li><li><p><a href="https://image.nuxt.com/" target="_blank" rel="noreferrer">NuxtImage</a></p><blockquote><p>Nuxt 應用圖片優化工具，使用內建的優化器或偏好的圖片 CDN 來調整和轉換圖片。</p></blockquote></li></ul><h2 id="_20-th" tabindex="-1">20 th <a class="header-anchor" href="#_20-th" aria-label="Permalink to &quot;20 th&quot;">​</a></h2><h3 id="套件-3" tabindex="-1">套件 <a class="header-anchor" href="#套件-3" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><a href="https://brm.io/matter-js/" target="_blank" rel="noreferrer">matter.js</a><blockquote><p>2D 網路物理引擎。</p></blockquote></li><li><a href="https://animejs.com/" target="_blank" rel="noreferrer">anime</a><blockquote><p>輕量級的 JavaScript 動畫庫，擁有簡單而強大的 API。<br> 可以用於 CSS 屬性、SVG、DOM 屬性和 JavaScript 物件。</p></blockquote></li><li><a href="https://www.babylonjs.com/" target="_blank" rel="noreferrer">babylon.js</a><blockquote><p>遊戲和渲染引擎，封裝在 JavaScript 框架中。</p></blockquote></li></ul><p><a href="https://cod-chill-component.pages.dev/" target="_blank" rel="noreferrer">⋯ Reference</a></p><h3 id="css-1" tabindex="-1">CSS <a class="header-anchor" href="#css-1" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li><p>Anchor Positioning API</p><blockquote><p>錨點是使用 <code>anchor-name</code> 屬性指定為參照點的元素。 定位元素是使用 <code>position-anchor</code> 屬性，或是在定位邏輯中明確使用 <code>anchor-name</code> 的相對於錨點元素。</p></blockquote><blockquote><p><b>設定錨點 ⚓️</b> 在要設為錨點的元素套上專屬 ID，且 ID 前需加上 <code>--</code></p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">anchor-button</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   anchor-name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> --anchor-el</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote><blockquote><p>錨定位置是以 CSS 絕對定位為基礎。<br> 如要使用定位值，您必須在定位元素中加入 <code>position: absolute</code>。 接著，使用 <code>anchor()</code> 函式套用定位值。</p></blockquote><blockquote><p><b>將其他元素與錨點進行連結</b></p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">positioned-notice</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    position-anchor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> --anchor-el</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* 專屬 ID */</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote><blockquote><p><b>設定該元素與錨點的相對位置</b></p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">positioned-notice</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	position-anchor</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> --anchor-el</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> anchor(bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></blockquote><blockquote><p><b>明確錨點（可以錨定到不同元素）</b></p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">positioned-notice</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> anchor(--anchor-el bottom)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote></li></ul><p><a href="https://developer.chrome.com/blog/anchor-positioning-api" target="_blank" rel="noreferrer">⋯ Reference</a></p><h2 id="_22-nd" tabindex="-1">22 nd <a class="header-anchor" href="#_22-nd" aria-label="Permalink to &quot;22 nd&quot;">​</a></h2><h3 id="開發方式" tabindex="-1">開發方式 <a class="header-anchor" href="#開發方式" aria-label="Permalink to &quot;開發方式&quot;">​</a></h3><ul><li><p>TDD（Test-driven development，測試驅動開發）</p><blockquote><p>開發軟體的過程，先寫測試再寫程式碼。 目標是寫出高品質、可維護的程式碼，它鼓勵開發人員在撰寫程式碼之前考慮程式碼的設計。</p><p>Step１：撰寫一份測試並因為程式碼尚未實現而運行失敗 Step２：撰寫程式碼以讓測試通過 Step３：重構程式碼以提高品質</p></blockquote><blockquote><p><b>優點</b></p><ol><li>提高功能的可測試性，架構較完善</li><li>提升開發者信心</li><li>提早發現潛在的 bug，減少錯誤機會</li></ol></blockquote><blockquote><p><b>缺點</b></p><ol><li>非開發人員無法驗證測試是否符合需求</li><li>增加開發人員工作量與開發時長</li></ol></blockquote></li><li><p>BDD（Behavior-driven development，行為驅動開發）</p><blockquote><p>針對 TDD 的改進，主要針對系統的行為，而不是細節的實現。 在寫測試前先寫測試規格書，同時它會更從<b>使用者的角度</b>建立相關的測試情境。 這份測試規格會用更接近人類語意的自然語言來描述軟體功能和測試案例。 鼓勵開發人員、測試人員和業務利益相關者之間的協作，以確保每個人都對系統的行為有共同的理解。</p><p>Step１：識別並描述系統行為的情境 Step２：使用自然語言寫出情境 Step３：使用測試工具以自動化各情境</p><p>行為是根據場景來描述的，場景描述了使用者和系統之間的互動。 每個場景都由一組 Given、When、Then 步驟組成：</p><ul><li>Given 步驟指定初始條件</li><li>When 步驟指定操作</li><li>Then 步驟指定預期結果</li></ul></blockquote><blockquote><p><b>優點</b></p><ol><li>非技術性語言，更加容易理解</li><li>提供多種方式來說明實際的測試情境，以便更了解需求</li></ol></blockquote></li><li><p>DDD（Domain-driven design，領域驅動設計）</p><blockquote><p>從業務出發設計程式碼，Domain 指的便是業務範圍。 透過策略部分指導我們根據業務劃分出業務領域，並區分哪些是核心領域，哪些是支撐領域和通用領域。 當業務複雜，並且需要長期維護時再考慮使用 DDD，否則只是在浪費成本。</p></blockquote><blockquote><p><b>優點</b></p><ol><li>開發者能與熟悉業務者進行合作</li><li>軟體能夠準確表達業務規則</li></ol></blockquote></li><li><p>ATDD（Acceptance Test-driven development，驗收測試驅動開發）</p><blockquote><p>將驗收標準轉化為測試的開發技術。 類似於 BDD，但著重於接受標準而非行為，涉及開發人員、測試人員和利害關係人之間的協作，以確保軟體符合驗收標準。</p><p>Step１：定義特性的驗收標準 Step２：使用測試工具自動化驗收測試 Step３：驗證特性是否符合驗收標準</p></blockquote></li></ul><p><a href="https://ithelp.ithome.com.tw/articles/10305119" target="_blank" rel="noreferrer">⋯ Reference</a><br><a href="https://juejin.cn/post/7272770714120912908?searchId=20240419113601286D067C9EA50E62AA63" target="_blank" rel="noreferrer">⋯ Reference</a><br><a href="https://juejin.cn/post/6844903992351260680?searchId=20240419113601286D067C9EA50E62AA63" target="_blank" rel="noreferrer">⋯ Reference</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><a href="https://cucumber.io/" target="_blank" rel="noreferrer">Cucumber</a> 支援 BDD 的測試工具，使用 Gherkin 語法撰寫。 可以驗證軟體是否符合 specification，並生成一個報告，指示每個 scenario 的成功或失敗。</p></div><div class="tip custom-block"><p class="custom-block-title">Gherkin</p><p>一種描述語法，用來撰寫 specification，使用 <code>Given</code>, <code>when</code>, <code>then</code>... 等關鍵字來撰寫 User Story。 讓客戶、PM、開發人員都能看懂此文件，降低溝通成本，同時支援多國語言。</p><p><a href="https://hackmd.io/@onejar99/BJ9LkkBNH" target="_blank" rel="noreferrer">⋯ Reference</a></p></div><h2 id="_27-th" tabindex="-1">27 th <a class="header-anchor" href="#_27-th" aria-label="Permalink to &quot;27 th&quot;">​</a></h2><h3 id="測試" tabindex="-1">測試 <a class="header-anchor" href="#測試" aria-label="Permalink to &quot;測試&quot;">​</a></h3><ul><li>Unit Test（單元測試） <blockquote><p>測試單一元件或模組的功能，通常由開發者在程式碼層級進行，重點在於檢測基本的程式碼功能。</p><ul><li>重構或者修改程式碼的時候有保證，不會破壞程式碼的功能</li><li>阻止 bug 重複發生（regressions），透過增加單元測試來檢查某些特定的 bug 即可阻止類似的情況發生</li><li>更容易地定位問題並且解決問題</li></ul></blockquote></li><li>Integration Test（整合測試） <blockquote><p>測試多個組件或模組之間的交互，驗證它們是否能正確地共同工作。</p><ul><li>若程式碼複雜到不容易寫單元測試，最好的方法是透過修改程式碼使它更容易去做單元測試。</li></ul></blockquote></li><li>Functional Test（功能測試） <blockquote><p>又稱為行為測試（behavioral testing），針對產品的各項功能進行驗證，<b>確認是否符合預先期望的商業邏輯或行為</b>。 由於 functional testing 耗時最久，也更難自動化，我們希望他盡可能的少被執行，當執行到這個階段前，基本上也代表前兩個階段都驗證完畢。</p></blockquote></li><li>End-to-end Test（端對端測試） <blockquote><p>測試整個應用程式的流程，從使用者介面到資料庫，<b>模擬真實使用者場景的操作</b>，確保所有元件在一起時應用程式能如預期運作。</p></blockquote></li></ul><h2 id="_31-st" tabindex="-1">31 st <a class="header-anchor" href="#_31-st" aria-label="Permalink to &quot;31 st&quot;">​</a></h2><h3 id="csrf" tabindex="-1">CSRF <a class="header-anchor" href="#csrf" aria-label="Permalink to &quot;CSRF&quot;">​</a></h3><p>CSRF 是指跨站的請求偽造，這種攻擊方法會強迫使用者在他們已經驗證身份的網站中，執行某些惡意的偽造操作，因為已經驗證過該使用者，所以網站就會以為操作來自該使用者，因此接受了該操作。</p><ul><li><p>攻擊流程</p><ol><li>使用者成功登入 A 銀行網站的帳戶，並且代表使用者身份的 cookie 在本地保存下來，所以下次再來 A 銀行網站時，不用重新登入。</li><li>由於使用者沒有登出 A 銀行網站的帳戶，在瀏覽 B 惡意網站時，B 網站有個被設為透明的圖片，因為是透明的，所以使用者在畫面上看不到，然而該圖片包含一段惡意程式碼。</li><li>使用者雖然將看不到此圖片，但是瀏覽器仍會向提交請求，同時此請求是帶有使用者的 cookie，所以 A 銀行可以辨識使用者身份，此惡意攻擊執行成功。</li></ol></li><li><p>防禦方式</p><ol><li>加上其他驗證手段 <blockquote><p>針對比較危險的操作，可以增加圖形驗證碼、簡訊驗證碼等驗證。</p></blockquote></li><li>不要使用 GET <blockquote><p>不要用 GET 請求來做關鍵操作，建議用 POST 請求。 POST 需要點擊提交動作，才能觸發 CSRF 攻擊。 <span class="important">注意</span>仍有可能被攻擊，但不會像用 GET 請求一樣，使用者可能在完全不知情下，進到網站就馬上被攻擊。</p></blockquote></li><li>檢查 Referrer <blockquote><p>先辨識發出請求的，是在哪個網站。 <span class="important">注意</span>若駭客能篡改 Referrer 的值，那仍有可能被攻擊成功。</p></blockquote></li><li>SameSite cookies <blockquote><p>SameSite cookies 是 HTTP Response Headers 中的 <code>Set-Cookie</code> 的屬性之一，此屬性的可能值為 <code>Lax</code>、<code>Strict</code> 或 <code>None</code>。</p></blockquote></li></ol></li></ul><p><a href="https://www.explainthis.io/zh-hant/swe/what-is-csrf" target="_blank" rel="noreferrer">⋯ Reference</a></p>`,53),p=[o];function t(r,c,i,D,y,F){return a(),n("div",null,p)}const b=s(e,[["render",t]]);export{C as __pageData,b as default};
