import"./chunks/FoldCode.vue_vue_type_style_index_0_scoped_e8b0d0b7_lang.4ed993c7.js";import{o as s,c as a,V as n}from"./chunks/framework.fa42150b.js";const l=n(`<h1 id="dec-2023" tabindex="-1">Dec. 2023 <a class="header-anchor" href="#dec-2023" aria-label="Permalink to &quot;Dec. 2023&quot;">​</a></h1><h2 id="_3-rd" tabindex="-1">3 rd <a class="header-anchor" href="#_3-rd" aria-label="Permalink to &quot;3 rd&quot;">​</a></h2><h3 id="字體" tabindex="-1">字體 <a class="header-anchor" href="#字體" aria-label="Permalink to &quot;字體&quot;">​</a></h3><ul><li><a href="https://github.com/githubnext/monaspace" target="_blank" rel="noreferrer">monaspace</a><blockquote><p>Monaspace 字型系統是一個<span class="span-highlight">等寬字型，提供可變軸字型和靜態版本</span>。<br> 內包含五個可變軸字型，每個都有獨特的風格，但它們在度量上相容，能夠混搭運用。</p></blockquote></li></ul><h3 id="套件" tabindex="-1">套件 <a class="header-anchor" href="#套件" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><p><a href="https://github.com/vinayakkulkarni/v-offline" target="_blank" rel="noreferrer">V-Offline</a></p><blockquote><p>檢測離線和在線變化的簡單 VueJS 元件。</p></blockquote></li><li><p><a href="https://github.com/Atinux/nuxt-auth-utils" target="_blank" rel="noreferrer">nuxt-auth-utils</a></p><blockquote><p>Nuxt3 的 Auth Module，僅在<span class="span-highlight">啟用伺服器端渲染（SSR）時運作</span>，因為它使用伺服器 API 路由。<br> 無法在 <code>nuxt generate</code> 模式下使用。</p></blockquote></li></ul><h2 id="_6-th" tabindex="-1">6 th <a class="header-anchor" href="#_6-th" aria-label="Permalink to &quot;6 th&quot;">​</a></h2><h3 id="套件-1" tabindex="-1">套件 <a class="header-anchor" href="#套件-1" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><p><a href="https://github.com/shentao/vue-multiselect" target="_blank" rel="noreferrer">vue-multiselect</a></p><blockquote><p>Vue.js 的通用 select / multselect / tagging 元件。</p></blockquote></li><li><p><a href="https://github.com/robinrodricks/vue3-touch-events" target="_blank" rel="noreferrer">vue3-touch-events</a></p><blockquote><p>啟用在 Vue.js 3.x 上的任何 HTML DOM 元素上的 <span class="span-highlight">tap、swipe、touch、hold、mouse down、mouse up 事件</span>。<br> 使 Vue.js 互動內容適用於移動設備的最簡單方法，當 v-touch 事件添加到元素時，它以完全聲明式的語法在桌面和移動設備上運作。<br> 與其他 library 不同，無需在組件中添加任何特殊程式碼即可使其生效，只需全局註冊，將在整個應用程序中啟用新的事件。</p></blockquote></li></ul><h3 id="元件" tabindex="-1">元件 <a class="header-anchor" href="#元件" aria-label="Permalink to &quot;元件&quot;">​</a></h3><ul><li><a href="https://www.flexmonster.com/" target="_blank" rel="noreferrer">Flexmonster</a><blockquote><p>Flexmonster Pivot Table &amp; Charts 是一個用於資料可視化和報告的 JavaScript 組件。<br> 適用於任何技術棧，處理來自任何來源的資料，並可以無縫整合到專案中。</p></blockquote></li></ul><h2 id="_8-th" tabindex="-1">8 th <a class="header-anchor" href="#_8-th" aria-label="Permalink to &quot;8 th&quot;">​</a></h2><h3 id="git-更改-commit" tabindex="-1">Git 更改 commit <a class="header-anchor" href="#git-更改-commit" aria-label="Permalink to &quot;Git 更改 commit&quot;">​</a></h3><ul><li><p>修改最近一次的 commit 資訊</p><blockquote><p><b>修改訊息</b></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--amend</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>會出現修改訊息的介面，訊息會顯示於第一行，直接以編輯器規則修改儲存退出即可。</p></blockquote><blockquote><p><b>修改作者、信箱</b></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--amend</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--author=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username &lt;email&gt;</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Example: <code>--author=&quot;Minato1123 &lt;slamdunk0522@gmail.com&gt;&quot;</code></p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>如果發現不需更改，或是不是這支 Commit： 可以使用 <code>git reflog</code> 查看原本所在的 commit hash 並利用 <code>git reset [commit_hash]</code> 退回原本的 commit。</p></div></blockquote></li><li><p>修改過去的 commit 資訊</p><blockquote><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 更改最新兩條 commit</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">HEAD~</span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 更改此 commit 的下一條 commit 至最新的 commit</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-i</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">commit_hash</span><span style="color:#89DDFF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>編輯畫面會出現被選擇到的幾條 commit，再將需要修改的 commit 前面的 <code>pick</code> 改為 <code>edit</code>，並儲存退出。</p></blockquote><blockquote><p><b>修改訊息</b></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--amend</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>會出現修改訊息的介面，訊息會顯示於第一行，直接以編輯器規則修改儲存退出即可。</p></blockquote><blockquote><p><b>修改作者、信箱</b></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--amend</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--author=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username &lt;email&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--no-edit</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Example: <code>--author=&quot;Minato1123 &lt;slamdunk0522@gmail.com&gt;&quot;</code></p></blockquote><blockquote><p><b>同時修改訊息、作者與信箱</b></p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--amend</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--author=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">username &lt;email&gt;</span><span style="color:#89DDFF;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Example: <code>--author=&quot;Minato1123 &lt;slamdunk0522@gmail.com&gt;&quot;</code><br> 會出現修改訊息的介面，訊息會顯示於第一行，直接以編輯器規則修改儲存退出即可。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>修改完這一條 commit 後，執行下方指令以修改下一條 commit。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebase</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--continue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>出現此提示時，表示所有 commit 修改完成。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">Successfully</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rebased</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">and</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">updated</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">refs/heads/master.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></blockquote><blockquote><p>最後將更改同步於雲端，<strong>記得小心會覆蓋掉其他人的程式碼</strong>。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">main</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote></li></ul><p><a href="https://www.silinchen.com/post/git-amend-commit-info-author-email" target="_blank" rel="noreferrer">⋯ Reference</a></p><h2 id="_13-rd" tabindex="-1">13 rd <a class="header-anchor" href="#_13-rd" aria-label="Permalink to &quot;13 rd&quot;">​</a></h2><h3 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">A</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">B</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">b</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><code>keyof A &amp; keyof B</code><blockquote><p>一般的交集，取得 A 的 keys 和 B 的 keys 才進行交集。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// A 的 keys</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// B 的 keys</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 取交集</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></blockquote></li><li><code>keyof (A &amp; B)</code><blockquote><p>A 和 B 先進行 <code>&amp;</code> 後才取 keys。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// A 和 B 進行 &amp;，把兩個物件合併在一起</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">c</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">number</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 取 keys</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></blockquote></li><li><code>keyof A | keyof B</code><blockquote><p>一般的聯集，取得 A 的 keys 和 B 的 keys 才進行聯集。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// A 的 keys</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// B 的 keys</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 取聯集</span></span>
<span class="line"><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></blockquote></li><li><code>keyof (A | B)</code><blockquote><p>A 和 B 先進行 <code>|</code> 後才取 keys。</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// A 和 B 進行，只會拿到共通的屬性</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">b</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">string</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 取 keys</span></span>
<span class="line"><span style="color:#A6ACCD;">b</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></blockquote></li></ul><h2 id="_14-th" tabindex="-1">14 th <a class="header-anchor" href="#_14-th" aria-label="Permalink to &quot;14 th&quot;">​</a></h2><h3 id="套件-2" tabindex="-1">套件 <a class="header-anchor" href="#套件-2" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><p><a href="https://zunnzunn.github.io/vue-ganttastic/" target="_blank" rel="noreferrer">Vue-Ganttastic</a></p><blockquote><p>Vue 的 <span class="span-highlight">Gantt（甘特）圖組件</span>，簡單、互動且高度可自定義的 Vue.js 甘特圖組件。</p></blockquote></li><li><p><a href="https://github.com/crabnebula-dev/file-icons" target="_blank" rel="noreferrer">file-icons</a></p><blockquote><p>此套件提供了對 vscode-icons 圖示的簡單且快速的程式訪問，可以在自己的專案中使用它們。<br> 這個套件匯出了兩個函數：<code>getIconForFile</code> 和 <code>getIconForFolder</code>。<br> 它們使用了一種類似於 vscode-icons 中使用的匹配搜索方式，以找到給定文件或文件夾的最佳匹配圖示。</p></blockquote></li></ul><h3 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h3><ul><li><code>max-device-width</code><blockquote><p><span class="span-highlight">裝置整個顯示區域的寬度</span>，例如：真實裝置螢幕寬度。<br> 一般適合使用於 mobile 裝置。</p></blockquote></li><li><code>max-width</code><blockquote><p><span class="span-highlight">目標顯示區域的寬度</span>，例如：瀏覽器寬度。<br> 一般適合使用於電腦裝置。</p></blockquote></li></ul><p><a href="https://blog.csdn.net/bluefish_flying/article/details/90232411" target="_blank" rel="noreferrer">⋯ Reference</a></p><h2 id="_16-th" tabindex="-1">16 th <a class="header-anchor" href="#_16-th" aria-label="Permalink to &quot;16 th&quot;">​</a></h2><h3 id="套件-3" tabindex="-1">套件 <a class="header-anchor" href="#套件-3" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><p><a href="https://github.com/supanpanCn/web-localstorage-plus" target="_blank" rel="noreferrer">web-localstorage-plus</a></p><blockquote><p>基於 localStorage 再做一層封裝，以方便使用其功能。</p></blockquote></li><li><p><a href="https://github.com/xyxiao001/vue-cropper" target="_blank" rel="noreferrer">vue-cropper</a></p><blockquote><p>基於 Vue 的圖片剪裁套件。</p></blockquote></li><li><p><a href="https://github.com/fabricjs/fabric.js" target="_blank" rel="noreferrer">fabric.js</a></p><blockquote><p>Javascript HTML5 Canvas Library，SVG &lt;-&gt; Canvas parser。</p></blockquote></li></ul><h3 id="web-api" tabindex="-1">Web API <a class="header-anchor" href="#web-api" aria-label="Permalink to &quot;Web API&quot;">​</a></h3><ul><li>AbortController <blockquote><p>透過 <code>AbortController.AbortController()</code> 建立一個新的 AbortController 物件，可以在需要時中斷一個或多個 DOM 請求。<br><code>AbortController.abort()</code> 可以用來中斷 fetch request、對任何 response body 的讀取。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> controller </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">AbortController</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> signal </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> signal </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">signal</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">abort_button</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abort</span><span style="color:#F07178;">() </span><span style="color:#676E95;font-style:italic;">// 中斷 fetch</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">fetch_button</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 把 AbortSignal 作為 options 傳入該 fetch 的 options 物件中</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 這樣會把中斷訊號 (signal) 與控制器 (controller) 跟 fetch request 關聯起來，才可以透過呼叫 AbortController.abort() 來中斷該請求。</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">fetch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">url</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">signal</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">e</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 使用 abort 時，fetch 會被 AbortError 拒絕</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></blockquote></li></ul><h2 id="_19-th" tabindex="-1">19 th <a class="header-anchor" href="#_19-th" aria-label="Permalink to &quot;19 th&quot;">​</a></h2><h3 id="ui-框架" tabindex="-1">UI 框架 <a class="header-anchor" href="#ui-框架" aria-label="Permalink to &quot;UI 框架&quot;">​</a></h3><ul><li><a href="https://www.leaferjs.com/" target="_blank" rel="noreferrer">Leafer UI</a><blockquote><p>基於 Leafer 開發的 UI 繪圖框架，可結合 AI 繪圖、生成介面。</p><div class="tip custom-block"><p class="custom-block-title"><a href="https://github.com/leaferjs/leafer" target="_blank" rel="noreferrer">Leafer</a></p><p>HTML5 Canvas 2D 圖形渲染引擎，定義了圖形渲染引擎的核心功能，提供超強的動力，可以瞬間建立 100 萬個圖形，與具體 UI、業務場景無關， 提供了效能優化和可擴充套件的空間，遵循 Leafer 介面之上開發的渲染器、佈局器、UI 框架之間可以互通有無。</p></div></blockquote></li></ul><h3 id="套件-4" tabindex="-1">套件 <a class="header-anchor" href="#套件-4" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><a href="https://github.com/Sylvenas/tailwindcss-magic" target="_blank" rel="noreferrer">tailwindcss-magic</a><blockquote><p>為 TailwindCSS 提供豐富的動畫效果。</p></blockquote></li></ul><h2 id="_21-st" tabindex="-1">21 st <a class="header-anchor" href="#_21-st" aria-label="Permalink to &quot;21 st&quot;">​</a></h2><h3 id="套件-5" tabindex="-1">套件 <a class="header-anchor" href="#套件-5" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><a href="https://vue-concurrency.netlify.app/" target="_blank" rel="noreferrer">vue-concurrency</a><blockquote><p>封裝異步操作並管理 Vue 和 Composition API 並發性的 Library。<br> ember-concurrency 的移植版本，旨在解決相同範疇的問題。</p><div class="tip custom-block"><p class="custom-block-title"><a href="https://ember-concurrency.com/docs/introduction/" target="_blank" rel="noreferrer">ember-concurrency</a></p><p>Ember 套件，提供了一個強大的 Task primitive：支援取消操作、在該組件未渲染時自動取消⋯⋯等。</p></div></blockquote></li></ul><h3 id="元件、工具庫" tabindex="-1">元件、工具庫 <a class="header-anchor" href="#元件、工具庫" aria-label="Permalink to &quot;元件、工具庫&quot;">​</a></h3><ul><li><a href="https://maz-ui.com/" target="_blank" rel="noreferrer">Maz-UI</a><blockquote><p>Vue &amp; Nuxt（v3.x）的獨立組件和工具。</p></blockquote></li></ul><h2 id="_22-nd" tabindex="-1">22 nd <a class="header-anchor" href="#_22-nd" aria-label="Permalink to &quot;22 nd&quot;">​</a></h2><h3 id="套件-6" tabindex="-1">套件 <a class="header-anchor" href="#套件-6" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><a href="https://github.com/Tahul/nuxt-edgedb" target="_blank" rel="noreferrer">nuxt-edgedb</a><blockquote><p>將 Nuxt 3 與 EdgeDB 整合，以最少的配置為應用程式添加強大的資料庫層。</p><div class="language-tip line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tip</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">設計為關聯式資料庫的精神繼承者的下一代圖形關聯資料庫。&lt;br&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">繼承了 SQL 資料庫的優勢：型別安全、性能、可靠性和交易性。但是，與以關聯（表格）方式建模資料不同，EdgeDB 使用包含屬性和指向其他物件的連結的物件類型來表示資料。&lt;br&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">利用這種物件導向的模型提供了一種超強大的查詢語言，解決了一些 SQL 最大的可用性問題。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></blockquote></li></ul><h3 id="vscode-extension" tabindex="-1">VSCode Extension <a class="header-anchor" href="#vscode-extension" aria-label="Permalink to &quot;VSCode Extension&quot;">​</a></h3><ul><li><a href="https://github.com/Chakroun-Anas/turbo-console-log" target="_blank" rel="noreferrer">turbo-console-log</a><blockquote><p>透過選取或 hover 變數配合快捷鍵自動產生有意義的 <code>console.log</code>。</p></blockquote></li></ul><h2 id="_25-th" tabindex="-1">25 th <a class="header-anchor" href="#_25-th" aria-label="Permalink to &quot;25 th&quot;">​</a></h2><h3 id="vuex-vs-pinia" tabindex="-1">Vuex vs Pinia <a class="header-anchor" href="#vuex-vs-pinia" aria-label="Permalink to &quot;Vuex vs Pinia&quot;">​</a></h3><ul><li><p>Vuex</p><blockquote><p><b>1. Module</b><br> 透過 Vuex Module，可以基於 domain 功能將您的 store 拆分為多個檔案，使得可以在該特定命名空間中從 module 訪問狀態週期。</p></blockquote><blockquote><p><b>2. HMR</b><br> 支援 Hot Reload 功能，利用 webpack 的 hot module 替換 API，可以繼續開發的同時快速重新載入您的 mutations、modules、actions 和 getters。</p></blockquote><blockquote><p><b>3. Devtools 支援</b><br> 可以利用 Vue devtools 中的 Vuex tab，方便地訪問和 debug 我們的 mutations，以及查看狀態。</p></blockquote></li><li><p>Pinia</p><blockquote><p><b>1. Devtools 支援</b><br> Pinia 對 Vue devtools 提供卓越的支援，讓開發者輕鬆 debug 和監控應用程序的狀態和變更。</p></blockquote><blockquote><p><b>2. HMR</b><br> 透過 HMR，開發者可以對其程式碼進行更改，這些更改將立即反映在運行中的應用程序中，改進開發工作流程並減少開發時間。<br> 沒有 Pinia，全局狀態在 HMR 期間可能會被破壞和重置，但 Pinia 保留了它。</p></blockquote><blockquote><p><b>3. Plugins</b><br> Pinia 儲存可透過低階 API 進行全面擴充。<br> 使用 plugins，可以執行例如：本地存儲同步、ORM（物件關係映射）、在定義儲存時添加 options 等任務。<br> 當 Pinia 的默認行為不足夠時，可以使用現有的 plugins 或為自己的需求創建一個。</p></blockquote><blockquote><p><b>4. 完整的 TypeScript 支援或 JS 使用者的 autocompletion</b><br> 開發者可以快速編寫程式碼，避免常見的錯誤，提高程式碼品質，減少開發時間。</p></blockquote><blockquote><p><b>5. 伺服器端渲染（SSR）支援</b><br> Pinia 支援 SSR，使開發者能夠在 SSR Vue.js 框架（如：Nuxt）中使用 Pinia。</p></blockquote></li><li><p>為什麼 Pinia 更好？</p><blockquote><p><b>1. 直觀的設計</b><br> 透過直觀的 API，建立和組織 store 變得簡單、類似於建立元件。<br> 這種方法減少了對樣板程式碼的需求，相比於 Vuex 解決方案，學習的概念也更少。</p></blockquote><blockquote><p><b>2. 不再需要 mutations</b><br> 不需要考慮創建更新狀態的規則，可以直接更新它們。</p></blockquote><blockquote><p><b>3. 更完善的 TypeScript 支援</b><br> 一切都是有型別的，API 的設計方式盡可能地利用了 TS 型別推斷。</p></blockquote><blockquote><p><b>4. Autocompletion</b><br> 自動完成功能可使您撰寫更好的程式碼。</p></blockquote><blockquote><p><b>5. 更完善的 Module Structure</b><br> 不再需要嵌套結構化模組，Pinia 透過設計提供了一種扁平結構，同時仍然可以實現 store 之間的交叉組合。</p></blockquote><blockquote><p><b>6. Lightweight</b><br> Pinia 僅有 1 KB，非常容易整合到專案中。</p></blockquote></li></ul><p><a href="https://vuejsdevelopers.com/2023/04/11/pinia-vs-vuex---why-pinia-wins/" target="_blank" rel="noreferrer">⋯ Reference</a></p><h2 id="_27-th" tabindex="-1">27 th <a class="header-anchor" href="#_27-th" aria-label="Permalink to &quot;27 th&quot;">​</a></h2><h3 id="javascript" tabindex="-1">JavaScript <a class="header-anchor" href="#javascript" aria-label="Permalink to &quot;JavaScript&quot;">​</a></h3><ul><li><code>fn.bind(thisArg[, arg1[, arg2[, ...]]])</code><blockquote><p>透過 <code>bind()</code>，借用已建立的函式來創造新的函式，但將 this 綁到指定的物件上。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">foo</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">logName</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> tmp </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">bar</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newFunction </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> logName</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#A6ACCD;">(tmp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">logName</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// foo</span></span>
<span class="line"><span style="color:#82AAFF;">newFunction</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">// bar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></blockquote></li><li><code>fn.call(thisArg[, arg1[, arg2[, ...]]])</code><blockquote><p>參數的傳入方法為<span class="span-highlight">逐項傳入</span>。</p></blockquote></li><li><code>fn.apply(thisArg, [argsArray])</code><blockquote><p>參數的傳入方法為<span class="span-highlight">陣列</span>型別。</p></blockquote></li></ul><h3 id="問題" tabindex="-1">問題 <a class="header-anchor" href="#問題" aria-label="Permalink to &quot;問題&quot;">​</a></h3><ul><li>使用 <code>defineProperty</code> 向物件添加屬性時，默認是<span class="span-highlight">不可列舉</span>的 <blockquote><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Lydia</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#A6ACCD;">(person</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">21</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(person) </span><span style="color:#676E95;font-style:italic;">// { name: &#39;Lydia&#39;, age: 21 }</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#A6ACCD;">(person)) </span><span style="color:#676E95;font-style:italic;">// [&#39;name&#39;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></blockquote></li></ul><h2 id="_30-th" tabindex="-1">30 th <a class="header-anchor" href="#_30-th" aria-label="Permalink to &quot;30 th&quot;">​</a></h2><h3 id="javascript-1" tabindex="-1">JavaScript <a class="header-anchor" href="#javascript-1" aria-label="Permalink to &quot;JavaScript&quot;">​</a></h3><ul><li><p><code>Number.isNaN</code> vs <code>isNaN</code></p><blockquote><p><code>Number.isNaN</code>：真的是 <code>NaN</code> 才會回傳 true。<br><code>isNaN</code>：只要不是 <code>number</code> 就會回傳 true。</p></blockquote><blockquote><table><thead><tr><th></th><th><code>Number.isNaN()</code></th><th><code>isNaN()</code></th></tr></thead><tbody><tr><td><code>NaN</code></td><td><code>true</code></td><td><code>true</code></td></tr><tr><td><code>&#39;A String&#39;</code></td><td><code>false</code></td><td><code>true</code></td></tr><tr><td><code>undefined</code></td><td><code>false</code></td><td><code>true</code></td></tr><tr><td><code>{}</code></td><td><code>false</code></td><td><code>true</code></td></tr></tbody></table></blockquote></li></ul><h3 id="套件-7" tabindex="-1">套件 <a class="header-anchor" href="#套件-7" aria-label="Permalink to &quot;套件&quot;">​</a></h3><ul><li><p><a href="https://github.com/biomejs/biome" target="_blank" rel="noreferrer">Biome</a></p><blockquote><p>針對 JavaScript、TypeScript、JSX 和 JSON 的快速 Formatter，其與 Prettier 有 97% 的相容性。<br> 高效的 JavaScript、TypeScript 和 JSX 的程式碼 linter，能在編寫程式碼的同時進行格式化和檢查錯誤的程式碼。</p></blockquote></li><li><p><a href="https://github.com/antfu/bumpp" target="_blank" rel="noreferrer">bumpp</a></p><blockquote><p>互動式 CLI 以更新版號。</p></blockquote></li></ul>`,59),e=[l],b=JSON.parse('{"title":"Dec. 2023","description":"","frontmatter":{"outline":2},"headers":[],"relativePath":"daily-log/year2023/dec2023.md"}'),o={name:"daily-log/year2023/dec2023.md"},u=Object.assign(o,{setup(p){return(t,r)=>(s(),a("div",null,e))}});export{b as __pageData,u as default};
